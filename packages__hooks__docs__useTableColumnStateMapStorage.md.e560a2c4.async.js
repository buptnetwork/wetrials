(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[27],{HVN5:function(n,e,t){"use strict";t("0Owb"),t("q1tI"),t("mlvz")},I6YG:function(n,e,t){"use strict";t.r(e);var a=t("q1tI"),o=t.n(a),l=t("dEAq"),s=(t("TN5+"),t("HVN5"),t("tP8H"),t("0zqC")),r=t("ZpkN"),d=t("hIlj").default["docs-useTableColumnStateMapStorage"].component;e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h1",{id:"usetablecolumnstatemapstorage---\u5206\u9875\u5217\u8868\u72b6\u6001\u8bb0\u5f55"},o.a.createElement(l["AnchorLink"],{to:"#usetablecolumnstatemapstorage---\u5206\u9875\u5217\u8868\u72b6\u6001\u8bb0\u5f55","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"useTableColumnStateMapStorage - \u5206\u9875\u5217\u8868\u72b6\u6001\u8bb0\u5f55"),o.a.createElement("p",null,"\u4e00\u4e2a\u53ef\u4ee5\u81ea\u52a8\u7ba1\u7406 ProTable \u7684\u5217\u72b6\u6001\u6301\u4e45\u5316\u5b58\u50a8\u5728 localStorage \u4e2d\u7684 Hook \u3002"),o.a.createElement("h2",{id:"\u4ee3\u7801\u6f14\u793a"},o.a.createElement(l["AnchorLink"],{to:"#\u4ee3\u7801\u6f14\u793a","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"\u4ee3\u7801\u6f14\u793a"),o.a.createElement("h3",{id:"\u7b80\u5355\u5b9e\u7528"},o.a.createElement(l["AnchorLink"],{to:"#\u7b80\u5355\u5b9e\u7528","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"\u7b80\u5355\u5b9e\u7528")),o.a.createElement(s["default"],{sources:{_:{jsx:"import React, { useState, useEffect } from 'react';\nimport { Card, Radio, Row, Col } from 'antd';\nimport { useTableColumnStateMapStorage } from '@wetrial/hooks';\n\n// \u6a21\u62df\u6446\u8868\u683c\u8bbe\u7f6e\u663e\u793a\u5217\nconst getColumnsByType = (columns, type) => {\n  let result = {};\n\n  if (type === 'all') {\n    result = {};\n  } else if (type === 'even') {\n    columns.forEach((v, i) => {\n      if (i % 2 === 1) {\n        result[v.dataIndex] = {\n          show: false,\n        };\n      }\n    });\n  } else if (type === 'odd') {\n    columns.forEach((v, i) => {\n      if (i % 2 === 0) {\n        result[v.dataIndex] = {\n          show: false,\n        };\n      }\n    });\n  } else {\n    columns.forEach(v => {\n      result[v.dataIndex] = {\n        show: false,\n      };\n    });\n  }\n\n  return result;\n};\n\nexport default () => {\n  // \u5b9a\u4e49\u6240\u6709\u7684\u5217\n  const columns = [\n    {\n      title: '\u59d3\u540d',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: '\u5e74\u9f84',\n      dataIndex: 'age',\n      key: 'age',\n    },\n    {\n      title: '\u6027\u522b',\n      dataIndex: 'gender',\n      key: 'gender',\n    },\n    {\n      title: '\u4f4f\u5740',\n      dataIndex: 'address',\n      key: 'address',\n    },\n  ];\n  const [type, setType] = useState('all');\n  const { tableProps, getColumns } = useTableColumnStateMapStorage(\n    '/hooks/useTableColumnStateMapStorage',\n  );\n  useEffect(() => {\n    const columnStateMaps = getColumnsByType(columns, type);\n    tableProps.onColumnsStateChange(columnStateMaps);\n  }, [type]);\n\n  const handleChangeType = e => {\n    setType(e.target.value);\n  };\n\n  return (\n    <Card>\n      <Radio.Group value={type} onChange={handleChangeType}>\n        <Radio.Button value=\"all\">\u663e\u793a\u6240\u6709</Radio.Button>\n        <Radio.Button value=\"even\">\u663e\u793a\u57fa\u6570</Radio.Button>\n        <Radio.Button value=\"odd\">\u663e\u793a\u5076\u6570</Radio.Button>\n        <Radio.Button value=\"none\">\u5168\u90e8\u9690\u85cf</Radio.Button>\n      </Radio.Group>\n      <Row>\n        <Col span=\"8\">\n          <Card bordered={false} title=\"\u6240\u6709\u5217\">\n            {JSON.stringify(columns, null, '\\t')}\n          </Card>\n        </Col>\n        <Col span=\"8\">\n          <Card bordered={false} title=\"tableProps\">\n            {JSON.stringify(tableProps)}\n          </Card>\n        </Col>\n        <Col span=\"8\">\n          <Card bordered={false} title=\"\u663e\u793a\u7684\u5217\">\n            {JSON.stringify(getColumns(columns))}\n          </Card>\n        </Col>\n      </Row>\n    </Card>\n  );\n};\n",tsx:"import React, { useState, useEffect } from 'react';\nimport { Card, Radio, Row, Col } from 'antd';\nimport { useTableColumnStateMapStorage } from '@wetrial/hooks';\n\ntype OpType = 'all' | 'even' | 'odd' | 'none';\n\n// \u6a21\u62df\u6446\u8868\u683c\u8bbe\u7f6e\u663e\u793a\u5217\nconst getColumnsByType = (columns: any[], type: OpType) => {\n  let result = {};\n  if (type === 'all') {\n    result = {};\n  } else if (type === 'even') {\n    columns.forEach((v, i) => {\n      if (i % 2 === 1) {\n        result[v.dataIndex] = {\n          show: false,\n        };\n      }\n    });\n  } else if (type === 'odd') {\n    columns.forEach((v, i) => {\n      if (i % 2 === 0) {\n        result[v.dataIndex] = {\n          show: false,\n        };\n      }\n    });\n  } else {\n    columns.forEach((v) => {\n      result[v.dataIndex] = {\n        show: false,\n      };\n    });\n  }\n  return result;\n};\n\nexport default () => {\n  // \u5b9a\u4e49\u6240\u6709\u7684\u5217\n  const columns = [\n    {\n      title: '\u59d3\u540d',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: '\u5e74\u9f84',\n      dataIndex: 'age',\n      key: 'age',\n    },\n    {\n      title: '\u6027\u522b',\n      dataIndex: 'gender',\n      key: 'gender',\n    },\n    {\n      title: '\u4f4f\u5740',\n      dataIndex: 'address',\n      key: 'address',\n    },\n  ];\n\n  const [type, setType] = useState<OpType>('all');\n\n  const { tableProps, getColumns } = useTableColumnStateMapStorage(\n    '/hooks/useTableColumnStateMapStorage',\n  );\n\n  useEffect(() => {\n    const columnStateMaps = getColumnsByType(columns, type);\n    tableProps.onColumnsStateChange(columnStateMaps);\n  }, [type]);\n\n  const handleChangeType = (e) => {\n    setType(e.target.value);\n  };\n\n  return (\n    <Card>\n      <Radio.Group value={type} onChange={handleChangeType}>\n        <Radio.Button value=\"all\">\u663e\u793a\u6240\u6709</Radio.Button>\n        <Radio.Button value=\"even\">\u663e\u793a\u57fa\u6570</Radio.Button>\n        <Radio.Button value=\"odd\">\u663e\u793a\u5076\u6570</Radio.Button>\n        <Radio.Button value=\"none\">\u5168\u90e8\u9690\u85cf</Radio.Button>\n      </Radio.Group>\n      <Row>\n        <Col span=\"8\">\n          <Card bordered={false} title=\"\u6240\u6709\u5217\">\n            {JSON.stringify(columns, null, '\\t')}\n          </Card>\n        </Col>\n        <Col span=\"8\">\n          <Card bordered={false} title=\"tableProps\">\n            {JSON.stringify(tableProps)}\n          </Card>\n        </Col>\n        <Col span=\"8\">\n          <Card bordered={false} title=\"\u663e\u793a\u7684\u5217\">\n            {JSON.stringify(getColumns(columns))}\n          </Card>\n        </Col>\n      </Row>\n    </Card>\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.3",css:"antd/dist/antd.css"}},title:"\u7528\u4e8e\u8bb0\u5f55table\u4e2d\u63a7\u5236\u663e\u793a\u9690\u85cf\u7684\u5217",description:'<div class="markdown"><p>\u8bb0\u5f55\u5230localstorage\u4e2d</p></div>',identifier:"docs-useTableColumnStateMapStorage"},o.a.createElement(d,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement(l["AnchorLink"],{to:"#api","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"API"),o.a.createElement(r["a"],{code:"import { useTableColumnStateMapStorage } from '@wetrial/hooks';\n\nconst { tableProps, getColumns } = useTableColumnStateMapStorage('/organizations/list');\n\nconst { tableProps, getColumns } = useTableColumnStateMapStorage('/organizations/list', {\n  name: { show: false },\n});\n",lang:"typescript"}))))}},OGKa:function(n,e,t){},"TN5+":function(n,e,t){"use strict";t("0Owb"),t("q1tI"),t("kERV")},kERV:function(n,e,t){},mlvz:function(n,e,t){},tP8H:function(n,e,t){"use strict";t("tJVT"),t("q1tI"),t("OGKa")}}]);