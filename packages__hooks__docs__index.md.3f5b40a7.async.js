(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[23],{HVN5:function(n,e,t){"use strict";t("0Owb"),t("q1tI"),t("mlvz")},OGKa:function(n,e,t){},"TN5+":function(n,e,t){"use strict";t("0Owb"),t("q1tI"),t("kERV")},kERV:function(n,e,t){},mlvz:function(n,e,t){},tP8H:function(n,e,t){"use strict";t("tJVT"),t("q1tI"),t("OGKa")},"u4/v":function(n,e,t){"use strict";t.r(e);var a=t("q1tI"),o=t.n(a),r=t("dEAq"),l=(t("TN5+"),t("HVN5"),t("tP8H"),t("0zqC")),m=t("ZpkN"),s=t("hIlj").default["hooks-docs"].component,i=t("hIlj").default["hooks-docs-1"].component;e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h1",{id:"useformtable---\u5206\u9875\u5217\u8868"},o.a.createElement(r["AnchorLink"],{to:"#useformtable---\u5206\u9875\u5217\u8868","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"useFormTable - \u5206\u9875\u5217\u8868"),o.a.createElement("p",null,"\u5c01\u88c5\u4e86\u5e38\u7528\u7684 AntD ",o.a.createElement(r["Link"],{to:"https://ant.design/components/form-cn/"},"Form")," \u4e0e AntD ",o.a.createElement(r["Link"],{to:"https://ant.design/components/table-cn/"},"Table")," \u8054\u52a8\u903b\u8f91"),o.a.createElement("h2",{id:"\u4ee3\u7801\u6f14\u793a"},o.a.createElement(r["AnchorLink"],{to:"#\u4ee3\u7801\u6f14\u793a","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"\u4ee3\u7801\u6f14\u793a"),o.a.createElement("h3",{id:"\u57fa\u7840\u4f7f\u7528"},o.a.createElement(r["AnchorLink"],{to:"#\u57fa\u7840\u4f7f\u7528","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"\u57fa\u7840\u4f7f\u7528")),o.a.createElement(l["default"],{sources:{_:{jsx:'import React from \'react\';\nimport { Button, Col, Form, Input, Row, Table, Select } from \'antd\';\nimport { useFormTable } from \'@wetrial/hooks\';\n\nconst { Option } = Select;\n\nconst getTableData = ({ current, pageSize }, formData) => {\n  // eslint-disable-next-line no-console\n  console.log(current, pageSize); // eslint-disable-next-line no-console\n\n  console.log(\'formData\', formData);\n  return fetch(`https://randomuser.me/api?results=55&page=${current}&size=${pageSize}`)\n    .then(res => res.json())\n    .then(res => ({\n      total: res.info.results,\n      list: res.results,\n    }));\n};\n\nexport default () => {\n  const [form] = Form.useForm();\n  const { tableProps, search } = useFormTable(getTableData, {\n    defaultPageSize: 5,\n    form,\n  });\n  const { type, changeType, submit, reset } = search;\n  const columns = [\n    {\n      title: \'name\',\n      dataIndex: [\'name\', \'last\'],\n    },\n    {\n      title: \'email\',\n      dataIndex: \'email\',\n    },\n    {\n      title: \'phone\',\n      dataIndex: \'phone\',\n    },\n    {\n      title: \'gender\',\n      dataIndex: \'gender\',\n    },\n  ];\n  const advanceSearchForm = (\n    <div>\n      <Form form={form}>\n        <Row gutter={24}>\n          <Col span={8}>\n            <Form.Item label="name" name="name">\n              <Input placeholder="name" />\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <Form.Item label="email" name="email">\n              <Input placeholder="email" />\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <Form.Item label="phone" name="phone">\n              <Input placeholder="phone" />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Form.Item\n            style={{\n              display: \'flex\',\n              justifyContent: \'flex-end\',\n            }}\n          >\n            <Button type="primary" onClick={submit}>\n              Search\n            </Button>\n            <Button\n              onClick={reset}\n              style={{\n                marginLeft: 16,\n              }}\n            >\n              Reset\n            </Button>\n            <Button type="link" onClick={changeType}>\n              Simple Search\n            </Button>\n          </Form.Item>\n        </Row>\n      </Form>\n    </div>\n  );\n  const searchFrom = (\n    <div\n      style={{\n        marginBottom: 16,\n      }}\n    >\n      <Form\n        form={form}\n        style={{\n          display: \'flex\',\n          justifyContent: \'flex-end\',\n        }}\n      >\n        <Form.Item name="gender">\n          <Select\n            placeholder="-- \u8bf7\u9009\u62e9 --"\n            style={{\n              width: 120,\n              marginRight: 16,\n            }}\n            onChange={submit}\n          >\n            <Option value="">all</Option>\n            <Option value="male">male</Option>\n            <Option value="female">female</Option>\n          </Select>\n        </Form.Item>\n        <Form.Item name="name">\n          <Input.Search\n            placeholder="enter name"\n            style={{\n              width: 240,\n            }}\n            onSearch={submit}\n          />\n        </Form.Item>\n        <Button type="link" onClick={changeType}>\n          Advanced Search\n        </Button>\n      </Form>\n    </div>\n  );\n  return (\n    <div>\n      {type === \'simple\' ? searchFrom : advanceSearchForm}\n      <Table columns={columns} rowKey="email" {...tableProps} />\n    </div>\n  );\n};\n',tsx:"import React from 'react';\nimport { Button, Col, Form, Input, Row, Table, Select } from 'antd';\nimport { useFormTable } from '@wetrial/hooks';\nimport { PaginatedParams } from '@wetrial/hooks/es/useFormTable';\n\nconst { Option } = Select;\n\ninterface Item {\n  name: {\n    last: string;\n  };\n  email: string;\n  phone: string;\n  gender: 'male' | 'female';\n}\n\ninterface Result {\n  total: number;\n  list: Item[];\n}\n\nconst getTableData = ({ current, pageSize }: PaginatedParams[0], formData): Promise<Result> => {\n  // eslint-disable-next-line no-console\n  console.log(current, pageSize);\n  // eslint-disable-next-line no-console\n  console.log('formData', formData);\n  return fetch(`https://randomuser.me/api?results=55&page=${current}&size=${pageSize}`)\n    .then((res) => res.json())\n    .then((res) => ({\n      total: res.info.results,\n      list: res.results,\n    }));\n};\n\nexport default () => {\n  const [form] = Form.useForm();\n\n  const { tableProps, search } = useFormTable(getTableData, {\n    defaultPageSize: 5,\n    form,\n  });\n\n  const { type, changeType, submit, reset } = search;\n\n  const columns = [\n    {\n      title: 'name',\n      dataIndex: ['name', 'last'],\n    },\n    {\n      title: 'email',\n      dataIndex: 'email',\n    },\n    {\n      title: 'phone',\n      dataIndex: 'phone',\n    },\n    {\n      title: 'gender',\n      dataIndex: 'gender',\n    },\n  ];\n\n  const advanceSearchForm = (\n    <div>\n      <Form form={form}>\n        <Row gutter={24}>\n          <Col span={8}>\n            <Form.Item label=\"name\" name=\"name\">\n              <Input placeholder=\"name\" />\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <Form.Item label=\"email\" name=\"email\">\n              <Input placeholder=\"email\" />\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <Form.Item label=\"phone\" name=\"phone\">\n              <Input placeholder=\"phone\" />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Form.Item style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Button type=\"primary\" onClick={submit}>\n              Search\n            </Button>\n            <Button onClick={reset} style={{ marginLeft: 16 }}>\n              Reset\n            </Button>\n            <Button type=\"link\" onClick={changeType}>\n              Simple Search\n            </Button>\n          </Form.Item>\n        </Row>\n      </Form>\n    </div>\n  );\n\n  const searchFrom = (\n    <div style={{ marginBottom: 16 }}>\n      <Form form={form} style={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <Form.Item name=\"gender\">\n          <Select\n            placeholder=\"-- \u8bf7\u9009\u62e9 --\"\n            style={{ width: 120, marginRight: 16 }}\n            onChange={submit}\n          >\n            <Option value=\"\">all</Option>\n            <Option value=\"male\">male</Option>\n            <Option value=\"female\">female</Option>\n          </Select>\n        </Form.Item>\n        <Form.Item name=\"name\">\n          <Input.Search placeholder=\"enter name\" style={{ width: 240 }} onSearch={submit} />\n        </Form.Item>\n        <Button type=\"link\" onClick={changeType}>\n          Advanced Search\n        </Button>\n      </Form>\n    </div>\n  );\n\n  return (\n    <div>\n      {type === 'simple' ? searchFrom : advanceSearchForm}\n      <Table columns={columns} rowKey=\"email\" {...tableProps} />\n    </div>\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.3",css:"antd/dist/antd.css"}},title:"Form \u4e0e Table \u8054\u52a8",description:'<div class="markdown"><p>useFormTable \u63a5\u6536 form \u5b9e\u4f8b\u540e\uff0c\u4f1a\u8fd4\u56de search \u5bf9\u8c61\u3002</p></div>',"title_en-US":"Form and Table data binding","description_en-US":"useFormTable returns a search object after receiving a form instance.",identifier:"hooks-docs"},o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h3",{id:"\u5e26\u6570\u636e\u7f13\u5b58"},o.a.createElement(r["AnchorLink"],{to:"#\u5e26\u6570\u636e\u7f13\u5b58","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"\u5e26\u6570\u636e\u7f13\u5b58")),o.a.createElement(l["default"],{sources:{_:{jsx:"import { useFormTable } from '@wetrial/hooks';\nimport { Button, Form, Input, Table } from 'antd';\nimport React from 'react';\nimport { history } from 'umi';\n\nconst getTableData = (pageInfo, formData) => {\n  // eslint-disable-next-line no-console\n  console.log(pageInfo, formData);\n  const { current, pageSize } = pageInfo;\n  return fetch(`https://randomuser.me/api?results=55&page=${current}&size=${pageSize}`)\n    .then(res => res.json())\n    .then(res => ({\n      total: res.info.results,\n      list: res.results,\n    }));\n};\n\nexport default () => {\n  const [form] = Form.useForm(); // TODO filters and sorter\n\n  const { tableProps, params, search, sorter } = useFormTable(getTableData, {\n    defaultPageSize: 5,\n    form,\n    cacheKey: 'antd/use-form-table',\n  });\n  const { filters = {} } = params[0] || {};\n  const { type, changeType, submit, reset } = search || {};\n  const columns = [\n    {\n      title: 'name',\n      dataIndex: ['name', 'last'],\n    },\n    {\n      title: 'email',\n      dataIndex: 'email',\n    },\n    {\n      title: 'phone',\n      dataIndex: 'phone',\n      sorter: true,\n      sortOrder: sorter.field === 'phone' && sorter.order,\n    },\n    {\n      title: 'gender',\n      dataIndex: 'gender',\n      filters: [\n        {\n          text: 'male',\n          value: 'male',\n        },\n        {\n          text: 'female',\n          value: 'female',\n        },\n      ],\n      filteredValue: filters.gender,\n    },\n  ];\n  const searchFrom = (\n    <div\n      style={{\n        marginBottom: 16,\n      }}\n    >\n      <Form\n        form={form}\n        style={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        <Form.Item name=\"name\">\n          <Input\n            placeholder=\"enter name\"\n            style={{\n              width: 140,\n              marginRight: 16,\n            }}\n          />\n        </Form.Item>\n\n        {type === 'advance' && (\n          <>\n            <Form.Item name=\"email\">\n              <Input\n                placeholder=\"enter email\"\n                style={{\n                  width: 140,\n                  marginRight: 16,\n                }}\n              />\n            </Form.Item>\n            <Form.Item name=\"phone\">\n              <Input\n                placeholder=\"enter phone\"\n                style={{\n                  width: 140,\n                  marginRight: 16,\n                }}\n              />\n            </Form.Item>\n          </>\n        )}\n        <Button type=\"primary\" onClick={submit}>\n          \u641c\u7d22\n        </Button>\n        <Button\n          onClick={reset}\n          style={{\n            marginLeft: 8,\n          }}\n        >\n          \u91cd\u7f6e\n        </Button>\n        <Button type=\"link\" onClick={changeType}>\n          {type === 'simple' ? '\u5c55\u5f00' : '\u6298\u53e0'}\n        </Button>\n      </Form>\n    </div>\n  );\n  return (\n    <div>\n      <Button\n        danger\n        onClick={() => {\n          history.push({\n            pathname: '/hooks/other/other',\n            hash: '#useformtable-\u6570\u636e\u7f13\u5b58',\n          });\n        }}\n        style={{\n          marginBottom: 16,\n        }}\n      >\n        \u5207\u6362\u5230demo\u9875\u9762(\u518d\u5207\u6362\u56de\u6765\uff0c\u641c\u7d22\u72b6\u6001\u8fd8\u5728)\n      </Button>\n      {searchFrom}\n      <Table columns={columns} rowKey=\"email\" {...tableProps} />\n    </div>\n  );\n};\n",tsx:"import { useFormTable } from '@wetrial/hooks';\nimport { PaginatedParams } from '@wetrial/hooks/es/useFormTable';\nimport { Button, Form, Input, Table } from 'antd';\nimport React from 'react';\nimport { history } from 'umi';\n\ninterface Item {\n  name: {\n    last: string;\n  };\n  email: string;\n  phone: string;\n  gender: 'male' | 'female';\n}\n\ninterface Result {\n  total: number;\n  list: Item[];\n}\n\nconst getTableData = (pageInfo: PaginatedParams[0], formData): Promise<Result> => {\n  // eslint-disable-next-line no-console\n  console.log(pageInfo, formData);\n  const { current, pageSize } = pageInfo;\n  return fetch(`https://randomuser.me/api?results=55&page=${current}&size=${pageSize}`)\n    .then((res) => res.json())\n    .then((res) => ({\n      total: res.info.results,\n      list: res.results,\n    }));\n};\n\nexport default () => {\n  const [form] = Form.useForm();\n\n  // TODO filters and sorter\n  const { tableProps, params, search, sorter } = useFormTable(getTableData, {\n    defaultPageSize: 5,\n    form,\n    cacheKey: 'antd/use-form-table',\n  });\n\n  const { filters = {} } = params[0] || ({} as any);\n  const { type, changeType, submit, reset } = search || {};\n\n  const columns = [\n    {\n      title: 'name',\n      dataIndex: ['name', 'last'],\n    },\n    {\n      title: 'email',\n      dataIndex: 'email',\n    },\n    {\n      title: 'phone',\n      dataIndex: 'phone',\n      sorter: true,\n      sortOrder: sorter.field === 'phone' && sorter.order,\n    },\n    {\n      title: 'gender',\n      dataIndex: 'gender',\n      filters: [\n        { text: 'male', value: 'male' },\n        { text: 'female', value: 'female' },\n      ],\n      filteredValue: filters.gender,\n    },\n  ];\n\n  const searchFrom = (\n    <div style={{ marginBottom: 16 }}>\n      <Form form={form} style={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <Form.Item name=\"name\">\n          <Input placeholder=\"enter name\" style={{ width: 140, marginRight: 16 }} />\n        </Form.Item>\n\n        {type === 'advance' && (\n          <>\n            <Form.Item name=\"email\">\n              <Input placeholder=\"enter email\" style={{ width: 140, marginRight: 16 }} />\n            </Form.Item>\n            <Form.Item name=\"phone\">\n              <Input placeholder=\"enter phone\" style={{ width: 140, marginRight: 16 }} />\n            </Form.Item>\n          </>\n        )}\n        <Button type=\"primary\" onClick={submit}>\n          \u641c\u7d22\n        </Button>\n        <Button onClick={reset} style={{ marginLeft: 8 }}>\n          \u91cd\u7f6e\n        </Button>\n        <Button type=\"link\" onClick={changeType}>\n          {type === 'simple' ? '\u5c55\u5f00' : '\u6298\u53e0'}\n        </Button>\n      </Form>\n    </div>\n  );\n\n  return (\n    <div>\n      <Button\n        danger\n        onClick={() => {\n          history.push({\n            pathname: '/hooks/other/other',\n            hash: '#useformtable-\u6570\u636e\u7f13\u5b58',\n          });\n        }}\n        style={{ marginBottom: 16 }}\n      >\n        \u5207\u6362\u5230demo\u9875\u9762(\u518d\u5207\u6362\u56de\u6765\uff0c\u641c\u7d22\u72b6\u6001\u8fd8\u5728)\n      </Button>\n      {searchFrom}\n      <Table columns={columns} rowKey=\"email\" {...tableProps} />\n    </div>\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.3",css:"antd/dist/antd.css"},umi:{version:"3.2.19"}},title:"\u6570\u636e\u7f13\u5b58",description:'<div class="markdown"><p>\u901a\u8fc7 cacheKey \u53ef\u4ee5\u5b9e\u73b0 Form \u548c Table \u641c\u7d22\u72b6\u6001\u7f13\u5b58(\u5207\u6362\u5230\u5176\u4ed6\u9875\u9762\uff0c\u5176\u4ed6\u9875\u9762\u901a\u8fc7<code>activeCache</code>\u6765\u6fc0\u6d3b\u6307\u5b9akey\u7684\u7f13\u5b58\uff0c\u8fd9\u6837\u5f53\u5207\u6362\u56de\u6539\u9875\u9762\u7684\u65f6\u5019\uff0c\u641c\u7d22\u72b6\u6001\u4efb\u7136\u4fdd\u7559)\u3002</p></div>',"title_en-US":"Data caching","description_en-US":"Form and Table data cache through cacheKey",identifier:"hooks-docs-1"},o.a.createElement(i,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement(r["AnchorLink"],{to:"#api","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"API"),o.a.createElement("p",null,"useFormTable \u57fa\u4e8e ",o.a.createElement(r["Link"],{to:"/zh-CN/async"},"useRequest")," \u5b9e\u73b0\uff0c\u6240\u6709\u7684 ",o.a.createElement(r["AnchorLink"],{to:"/zh-CN/async?anchor=pagination#api-1"},"useRquest Pagination")," API \u5747\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002\u6bd4\u5982 ",o.a.createElement("code",null,"manual")," \u7b49\u7b49\u3002"),o.a.createElement("p",null,"useFormTable \u989d\u5916\u589e\u52a0\u4e86 ",o.a.createElement("code",null,"result.search")," \u548c ",o.a.createElement("code",null,"options.form"),"\u3002"),o.a.createElement(m["a"],{code:"const {\n  ...,\n  search: {\n    type: 'simple' | 'advance';\n    changeType: () => void;\n    submit: () => void;\n    reset: () => void;\n  };\n} = useFormTable(\n  service,\n  {\n    ...,\n    form\n  }\n);\n",lang:"javascript"}),o.a.createElement("h2",{id:"\u5c1a\u672a\u89e3\u51b3\u7684\u95ee\u9898"},o.a.createElement(r["AnchorLink"],{to:"#\u5c1a\u672a\u89e3\u51b3\u7684\u95ee\u9898","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"\u5c1a\u672a\u89e3\u51b3\u7684\u95ee\u9898"),o.a.createElement("p",null,"\u8bb0\u5f55\u662f\u5728\u7ec4\u4ef6\u9500\u6bc1\u7684\u65f6\u5019\u8fdb\u884c\u7684\uff0c\u5982\u679c\u662f\u6d4f\u89c8\u5668\u5237\u65b0\u64cd\u4f5c\uff0c\u662f\u88ab\u6d4f\u89c8\u5668\u76f4\u63a5\u9500\u6bc1\uff0c\u800c\u4e0d\u4f1a\u8fdb\u5165\u7ec4\u4ef6\u7684\u9500\u6bc1\u751f\u547d\u5468\u671f\uff0c\u6240\u4ee5\u5237\u65b0\u7684\u60c5\u51b5\u4e0d\u4f1a\u88ab\u8bb0\u5f55;"))))}}}]);