(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[11],{HVN5:function(n,a,e){"use strict";e("0Owb"),e("q1tI"),e("mlvz")},OGKa:function(n,a,e){},"TN5+":function(n,a,e){"use strict";e("0Owb"),e("q1tI"),e("kERV")},kERV:function(n,a,e){},mlvz:function(n,a,e){},phgo:function(n,a,e){"use strict";e.r(a);var t=e("q1tI"),i=e.n(t),o=e("dEAq"),r=(e("TN5+"),e("HVN5"),e("tP8H"),e("0zqC")),c=(e("ZpkN"),e("hIlj").default["docs-slide-captcha"].component);a["default"]=function(){return i.a.createElement(i.a.Fragment,null,i.a.createElement(i.a.Fragment,null,i.a.createElement("div",{className:"markdown"},i.a.createElement("h1",{id:"slidecaptcha---\u6ed1\u52a8\u9a8c\u8bc1\u7801"},i.a.createElement(o["AnchorLink"],{to:"#slidecaptcha---\u6ed1\u52a8\u9a8c\u8bc1\u7801","aria-hidden":"true"},i.a.createElement("span",{className:["icon","icon-link"]})),"SlideCaptcha - \u6ed1\u52a8\u9a8c\u8bc1\u7801"),i.a.createElement("p",null,"\u7528\u4e8e\u5728\u767b\u5f55\u3001\u6ce8\u518c\u7b49\u9700\u8981\u786e\u5b9a\u662f\u4eba\u4e3a\u64cd\u4f5c\u7684\u573a\u666f\u3002"),i.a.createElement("h2",{id:"\u6848\u4f8b"},i.a.createElement(o["AnchorLink"],{to:"#\u6848\u4f8b","aria-hidden":"true"},i.a.createElement("span",{className:["icon","icon-link"]})),"\u6848\u4f8b"),i.a.createElement("h3",{id:"\u57fa\u7840\u4f7f\u7528\u6ca1\u6709\u5bf9\u5e94\u540e\u7aef\uff0c\u8bf7\u53c2\u7167\u6848\u4f8b\u4f7f\u7528"},i.a.createElement(o["AnchorLink"],{to:"#\u57fa\u7840\u4f7f\u7528\u6ca1\u6709\u5bf9\u5e94\u540e\u7aef\uff0c\u8bf7\u53c2\u7167\u6848\u4f8b\u4f7f\u7528","aria-hidden":"true"},i.a.createElement("span",{className:["icon","icon-link"]})),"\u57fa\u7840\u4f7f\u7528(\u6ca1\u6709\u5bf9\u5e94\u540e\u7aef\uff0c\u8bf7\u53c2\u7167\u6848\u4f8b\u4f7f\u7528)")),i.a.createElement(r["default"],{sources:{_:{jsx:"import React from 'react';\nimport { SlideCaptcha } from '@wetrial/component';\nimport { useRequest } from 'ahooks';\nimport { post } from '@wetrial/core';\n\nexport default () => {\n  const { data, run, loading } = useRequest(\n    reqData =>\n      post('wetrial.github.io/api/VerificationCode/generation', {\n        data: reqData,\n      }),\n    {\n      manual: true,\n    },\n  );\n  const validateRequest = useRequest(\n    reqData =>\n      post('wetrial.github.io/api/VerificationCode/check', {\n        data: reqData,\n      }),\n    {\n      manual: true,\n    },\n  );\n\n  const requestCaptcha = () =>\n    run({\n      spec: 1,\n    });\n\n  const onValidate = reqData => validateRequest.run(reqData);\n\n  const onValidationSuccess = () => {\n    // eslint-disable-next-line no-alert\n    alert('\u9a8c\u8bc1\u6210\u529f!');\n  };\n\n  return (\n    <SlideCaptcha\n      loading={loading}\n      token={data?.token}\n      bgSrc={data?.normal}\n      captchSrc={data?.small}\n      width={data?.imgx}\n      height={data?.imgy}\n      top={data?.y}\n      onRefresh={requestCaptcha}\n      validate={onValidate} // onFinishFailed={this.onValidationError}\n      onFinish={onValidationSuccess}\n    />\n  );\n};\n",tsx:"import React from 'react';\nimport { SlideCaptcha } from '@wetrial/component';\nimport { useRequest } from 'ahooks';\nimport { post } from '@wetrial/core';\n\nexport default () => {\n  const { data, run, loading } = useRequest(\n    (reqData) => post('wetrial.github.io/api/VerificationCode/generation', { data: reqData }),\n    {\n      manual: true,\n    },\n  );\n\n  const validateRequest = useRequest(\n    (reqData) => post('wetrial.github.io/api/VerificationCode/check', { data: reqData }),\n    {\n      manual: true,\n    },\n  );\n\n  const requestCaptcha = () => {\n    return run({ spec: 1 });\n  };\n\n  const onValidate = (reqData) => {\n    return validateRequest.run(reqData);\n  };\n\n  const onValidationSuccess = () => {\n    // eslint-disable-next-line no-alert\n    alert('\u9a8c\u8bc1\u6210\u529f!');\n  };\n\n  return (\n    <SlideCaptcha\n      loading={loading}\n      token={data?.token}\n      bgSrc={data?.normal}\n      captchSrc={data?.small}\n      width={data?.imgx}\n      height={data?.imgy}\n      top={data?.y}\n      onRefresh={requestCaptcha}\n      validate={onValidate}\n      // onFinishFailed={this.onValidationError}\n      onFinish={onValidationSuccess}\n    />\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},ahooks:{version:"2.5.0"}},identifier:"docs-slide-captcha"},i.a.createElement(c,null))))}},tP8H:function(n,a,e){"use strict";e("tJVT"),e("q1tI"),e("OGKa")}}]);