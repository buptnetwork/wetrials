(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[9],{HVN5:function(n,e,t){"use strict";t("0Owb"),t("q1tI"),t("mlvz")},OGKa:function(n,e,t){},"TN5+":function(n,e,t){"use strict";t("0Owb"),t("q1tI"),t("kERV")},kERV:function(n,e,t){},mlvz:function(n,e,t){},tP8H:function(n,e,t){"use strict";t("tJVT"),t("q1tI"),t("OGKa")},tSzK:function(n,e,t){"use strict";t.r(e);var a=t("q1tI"),o=t.n(a),r=t("dEAq"),l=(t("TN5+"),t("HVN5"),t("tP8H"),t("0zqC")),m=(t("ZpkN"),t("hIlj").default["docs-pro-table"].component),i=t("hIlj").default["docs-pro-table-1"].component,s=t("hIlj").default["docs-pro-table-2"].component,c=t("hIlj").default["docs-pro-table-3"].component,d=t("hIlj").default["docs-pro-table-4"].component;e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h1",{id:"protable-table-\u7ec4\u4ef6"},o.a.createElement(r["AnchorLink"],{to:"#protable-table-\u7ec4\u4ef6","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"ProTable Table \u7ec4\u4ef6"),o.a.createElement("p",null,"pro-table \u5728 antd \u7684 table \u4e0a\u8fdb\u884c\u4e86\u4e00\u5c42\u5c01\u88c5\uff0c\u652f\u6301\u4e86\u4e00\u4e9b\u9884\u8bbe\uff0c\u5e76\u4e14\u5c01\u88c5\u4e86\u4e00\u4e9b\u884c\u4e3a\u3002\u8fd9\u91cc\u53ea\u5217\u51fa\u4e0e antd table \u4e0d\u540c\u7684 api\u3002"),o.a.createElement("h2",{id:"\u4f7f\u7528\u573a\u666f"},o.a.createElement(r["AnchorLink"],{to:"#\u4f7f\u7528\u573a\u666f","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"\u4f7f\u7528\u573a\u666f"),o.a.createElement("p",null,"\u4e00\u822c\u7528\u4e8e\u4e3b\u5217\u8868\u9875\u9762\uff0c\u9700\u8981\u590d\u6742\u641c\u7d22\u3001\u8bb0\u5f55\u641c\u7d22\u6761\u4ef6\u7b49\u7684\uff1b(\u8bf7\u6839\u636e\u60c5\u51b5\u4f7f\u7528\uff0c\u52ff\u6ee5\u7528.)"),o.a.createElement("h2",{id:"\u6848\u4f8b"},o.a.createElement(r["AnchorLink"],{to:"#\u6848\u4f8b","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"\u6848\u4f8b"),o.a.createElement("h3",{id:"\u57fa\u7840\u4f7f\u7528"},o.a.createElement(r["AnchorLink"],{to:"#\u57fa\u7840\u4f7f\u7528","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"\u57fa\u7840\u4f7f\u7528")),o.a.createElement(l["default"],{sources:{_:{jsx:"import React from 'react';\nimport { Row, Col, Input, Button, Form, Space, Tooltip } from 'antd';\nimport { MoreOutlined } from '@ant-design/icons';\nimport { ProTable } from '@wetrial/component';\nimport { LAYOUT_FORM_TWO, LAYOUT_COL_SEARCH_SIX } from '@wetrial/core/es/constants';\nimport { TableDropdown } from '@wetrial/component/es/ProTable';\nimport { useFormTable, formatFormTableParams } from '@wetrial/hooks';\nimport { PageContainer } from '@ant-design/pro-layout';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\n// \u6a21\u62df\u6570\u636e\u8bf7\u6c42\nconst getList = async data => {\n  // eslint-disable-next-line no-console\n  console.log(data);\n  return new Promise(resolve => {\n    const tableListDataSource = [];\n\n    for (let i = 0; i < 100; i++) {\n      tableListDataSource.push({\n        key: i,\n        name: `TradeCode ${i}`,\n        status: valueEnum[Math.floor(Math.random() * 10) % 4],\n        updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n        createdAt: Date.now() - Math.floor(Math.random() * 2000),\n        money: Math.floor(Math.random() * 2000) * i,\n        progress: Math.ceil(Math.random() * 100) + 1,\n      });\n    }\n\n    return resolve({\n      total: 100,\n      list: tableListDataSource,\n    });\n  });\n};\n\nexport default () => {\n  const [form] = Form.useForm();\n  const { tableProps, search, sorter } = useFormTable(\n    (paginatedParams, formData) => getList(formatFormTableParams(paginatedParams, formData)),\n    {\n      form,\n    },\n  );\n  const columns = [\n    {\n      title: '\u5e8f\u53f7',\n      dataIndex: 'index',\n      valueType: 'indexBorder',\n      width: 70,\n    },\n    {\n      title: '\u6807\u9898',\n      dataIndex: 'name',\n      sorter: true,\n      sortOrder: sorter.field === 'name' && sorter.order,\n      render: _ => <a>{_}</a>,\n    },\n    {\n      title: '\u72b6\u6001',\n      dataIndex: 'status',\n      width: 100,\n    },\n    {\n      title: '\u521b\u5efa\u65f6\u95f4',\n      dataIndex: 'createdAt',\n      width: 200,\n      valueType: 'dateTime',\n    },\n    {\n      title: '\u66f4\u65b0\u65f6\u95f4',\n      width: 120,\n      dataIndex: 'updatedAt',\n      valueType: 'date',\n    },\n    {\n      title: '\u64cd\u4f5c',\n      dataIndex: 'option',\n      width: 120,\n      valueType: 'option',\n      render: () => [\n        <a key=\"view\" target=\"_blank\" rel=\"noopener noreferrer\">\n          \u67e5\u770b\n        </a>,\n        <TableDropdown\n          key=\"other\" // eslint-disable-next-line no-alert\n          onSelect={key => window.alert(key)}\n          menus={[\n            {\n              key: 'copy',\n              name: '\u590d\u5236',\n            },\n            {\n              key: 'delete',\n              name: '\u5220\u9664',\n            },\n          ]}\n        />,\n      ],\n    },\n  ];\n  const { type, changeType, submit, reset } = search || {};\n\n  const simpleSearchForm = () => (\n    <Form className=\"wt-simple-search-form\" layout=\"inline\" form={form}>\n      <Form.Item name=\"search\">\n        <Input.Search\n          allowClear\n          placeholder=\"\u8bf7\u8f93\u5165\u59d3\u540d\u6216\u8005\u90ae\u7bb1\"\n          enterButton\n          suffix={\n            <Tooltip title=\"\u66f4\u591a\u641c\u7d22\u6761\u4ef6\">\n              <Button onClick={changeType} size=\"small\" type=\"link\" icon={<MoreOutlined />} />\n            </Tooltip>\n          }\n          onSearch={submit}\n        />\n      </Form.Item>\n    </Form>\n  );\n\n  const advanceSearchForm = () => (\n    <Form {...LAYOUT_FORM_TWO} form={form}>\n      <Row>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u59d3\u540d\" name=\"name\">\n            <Input autoComplete=\"off\" placeholder=\"\u59d3\u540d\" />\n          </Form.Item>\n        </Col>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u90ae\u7bb1\" name=\"title\">\n            <Input autoComplete=\"off\" placeholder=\"\u90ae\u7bb1\" />\n          </Form.Item>\n        </Col>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u63cf\u8ff0\" name=\"desc\">\n            <Input autoComplete=\"off\" placeholder=\"\u63cf\u8ff0\" />\n          </Form.Item>\n        </Col>\n        <Form.Item className=\"wt-advance-search-form-operator\">\n          <Space>\n            <Button type=\"primary\" onClick={submit}>\n              \u67e5\u8be2\n            </Button>\n            <Button onClick={reset}>\u91cd\u7f6e</Button>\n            <Button type=\"link\" onClick={changeType}>\n              \u6298\u53e0\n            </Button>\n          </Space>\n        </Form.Item>\n      </Row>\n    </Form>\n  );\n\n  return (\n    <PageContainer\n      title=\"\u57fa\u7840\u4f7f\u7528\"\n      extra={[\n        type === 'simple' ? simpleSearchForm() : undefined,\n        <Button key=\"1\">\u65b0\u589e</Button>,\n        <Button key=\"2\">\u5bfc\u51fa</Button>,\n      ]}\n    >\n      <ProTable\n        columns={columns}\n        rowKey=\"key\"\n        searchType={type}\n        renderSearch={advanceSearchForm}\n        {...tableProps}\n      />\n    </PageContainer>\n  );\n};\n",tsx:"import React from 'react';\nimport { Row, Col, Input, Button, Form, Space, Tooltip } from 'antd';\nimport { MoreOutlined } from '@ant-design/icons';\nimport { ProTable } from '@wetrial/component';\nimport { LAYOUT_FORM_TWO, LAYOUT_COL_SEARCH_SIX } from '@wetrial/core/es/constants';\nimport { ProColumns, TableDropdown } from '@wetrial/component/es/ProTable';\nimport { useFormTable, formatFormTableParams } from '@wetrial/hooks';\nimport { PageContainer } from '@ant-design/pro-layout';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  status: string;\n  updatedAt: number;\n  createdAt: number;\n  progress: number;\n  money: number;\n}\n\n// \u6a21\u62df\u6570\u636e\u8bf7\u6c42\nconst getList = async (data) => {\n  // eslint-disable-next-line no-console\n  console.log(data);\n  return new Promise((resolve) => {\n    const tableListDataSource: TableListItem[] = [];\n    for (let i = 0; i < 100; i++) {\n      tableListDataSource.push({\n        key: i,\n        name: `TradeCode ${i}`,\n        status: valueEnum[Math.floor(Math.random() * 10) % 4],\n        updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n        createdAt: Date.now() - Math.floor(Math.random() * 2000),\n        money: Math.floor(Math.random() * 2000) * i,\n        progress: Math.ceil(Math.random() * 100) + 1,\n      });\n    }\n    return resolve({\n      total: 100,\n      list: tableListDataSource,\n    });\n  });\n};\n\nexport default () => {\n  const [form] = Form.useForm();\n  const { tableProps, search, sorter } = useFormTable(\n    (paginatedParams, formData) => getList(formatFormTableParams(paginatedParams, formData)),\n    {\n      form,\n    },\n  );\n\n  const columns: ProColumns<TableListItem>[] = [\n    {\n      title: '\u5e8f\u53f7',\n      dataIndex: 'index',\n      valueType: 'indexBorder',\n      width: 70,\n    },\n    {\n      title: '\u6807\u9898',\n      dataIndex: 'name',\n      sorter: true,\n      sortOrder: sorter.field === 'name' && sorter.order,\n      render: (_) => <a>{_}</a>,\n    },\n    {\n      title: '\u72b6\u6001',\n      dataIndex: 'status',\n      width: 100,\n    },\n    {\n      title: '\u521b\u5efa\u65f6\u95f4',\n      dataIndex: 'createdAt',\n      width: 200,\n      valueType: 'dateTime',\n    },\n    {\n      title: '\u66f4\u65b0\u65f6\u95f4',\n      width: 120,\n      dataIndex: 'updatedAt',\n      valueType: 'date',\n    },\n    {\n      title: '\u64cd\u4f5c',\n      dataIndex: 'option',\n      width: 120,\n      valueType: 'option',\n      render: () => [\n        <a key=\"view\" target=\"_blank\" rel=\"noopener noreferrer\">\n          \u67e5\u770b\n        </a>,\n        <TableDropdown\n          key=\"other\"\n          // eslint-disable-next-line no-alert\n          onSelect={(key) => window.alert(key)}\n          menus={[\n            { key: 'copy', name: '\u590d\u5236' },\n            { key: 'delete', name: '\u5220\u9664' },\n          ]}\n        />,\n      ],\n    },\n  ];\n\n  const { type, changeType, submit, reset } = search || {};\n\n  const simpleSearchForm = () => (\n    <Form className=\"wt-simple-search-form\" layout=\"inline\" form={form}>\n      <Form.Item name=\"search\">\n        <Input.Search\n          allowClear\n          placeholder=\"\u8bf7\u8f93\u5165\u59d3\u540d\u6216\u8005\u90ae\u7bb1\"\n          enterButton\n          suffix={\n            <Tooltip title=\"\u66f4\u591a\u641c\u7d22\u6761\u4ef6\">\n              <Button onClick={changeType} size=\"small\" type=\"link\" icon={<MoreOutlined />} />\n            </Tooltip>\n          }\n          onSearch={submit}\n        />\n      </Form.Item>\n    </Form>\n  );\n\n  const advanceSearchForm = () => (\n    <Form {...LAYOUT_FORM_TWO} form={form}>\n      <Row>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u59d3\u540d\" name=\"name\">\n            <Input autoComplete=\"off\" placeholder=\"\u59d3\u540d\" />\n          </Form.Item>\n        </Col>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u90ae\u7bb1\" name=\"title\">\n            <Input autoComplete=\"off\" placeholder=\"\u90ae\u7bb1\" />\n          </Form.Item>\n        </Col>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u63cf\u8ff0\" name=\"desc\">\n            <Input autoComplete=\"off\" placeholder=\"\u63cf\u8ff0\" />\n          </Form.Item>\n        </Col>\n        <Form.Item className=\"wt-advance-search-form-operator\">\n          <Space>\n            <Button type=\"primary\" onClick={submit}>\n              \u67e5\u8be2\n            </Button>\n            <Button onClick={reset}>\u91cd\u7f6e</Button>\n            <Button type=\"link\" onClick={changeType}>\n              \u6298\u53e0\n            </Button>\n          </Space>\n        </Form.Item>\n      </Row>\n    </Form>\n  );\n\n  return (\n    <PageContainer\n      title=\"\u57fa\u7840\u4f7f\u7528\"\n      extra={[\n        type === 'simple' ? simpleSearchForm() : undefined,\n        <Button key=\"1\">\u65b0\u589e</Button>,\n        <Button key=\"2\">\u5bfc\u51fa</Button>,\n      ]}\n    >\n      <ProTable<TableListItem>\n        columns={columns}\n        rowKey=\"key\"\n        searchType={type}\n        renderSearch={advanceSearchForm}\n        {...tableProps}\n      />\n    </PageContainer>\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.3",css:"antd/dist/antd.css"},"@ant-design/icons":{version:"4.2.2"},"@ant-design/pro-layout":{version:"6.4.15"}},identifier:"docs-pro-table"},o.a.createElement(m,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h3",{id:"\u663e\u793a\u63d0\u793a\u5757"},o.a.createElement(r["AnchorLink"],{to:"#\u663e\u793a\u63d0\u793a\u5757","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"\u663e\u793a\u63d0\u793a\u5757")),o.a.createElement(l["default"],{sources:{_:{jsx:"import React from 'react';\nimport { Row, Col, Input, Button, Form, Space, Tooltip, Alert } from 'antd';\nimport { MoreOutlined } from '@ant-design/icons';\nimport { LAYOUT_FORM_TWO, LAYOUT_COL_SEARCH_SIX } from '@wetrial/core/es/constants';\nimport { ProTable } from '@wetrial/component';\nimport { TableDropdown } from '@wetrial/component/es/ProTable';\nimport { useFormTable, formatFormTableParams } from '@wetrial/hooks';\nimport { PageContainer } from '@ant-design/pro-layout';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\n// \u6a21\u62df\u6570\u636e\u8bf7\u6c42\nconst getList = async data => {\n  // eslint-disable-next-line no-console\n  console.log(data);\n  return new Promise(resolve => {\n    const tableListDataSource = [];\n\n    for (let i = 0; i < 100; i += 1) {\n      tableListDataSource.push({\n        key: i,\n        name: `TradeCode ${i}`,\n        status: valueEnum[Math.floor(Math.random() * 10) % 4],\n        updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n        createdAt: Date.now() - Math.floor(Math.random() * 2000),\n        money: Math.floor(Math.random() * 2000) * i,\n        progress: Math.ceil(Math.random() * 100) + 1,\n      });\n    }\n\n    return resolve({\n      total: 100,\n      list: tableListDataSource,\n    });\n  });\n};\n\nexport default () => {\n  const [form] = Form.useForm();\n  const { tableProps, search, sorter } = useFormTable(\n    (paginatedParams, formData) => getList(formatFormTableParams(paginatedParams, formData)),\n    {\n      form,\n    },\n  );\n  const columns = [\n    {\n      title: '\u5e8f\u53f7',\n      dataIndex: 'index',\n      valueType: 'indexBorder',\n      width: 70,\n    },\n    {\n      title: '\u6807\u9898',\n      dataIndex: 'name',\n      sorter: true,\n      sortOrder: sorter.field === 'name' && sorter.order,\n      render: _ => <a>{_}</a>,\n    },\n    {\n      title: '\u72b6\u6001',\n      dataIndex: 'status',\n      width: 100,\n    },\n    {\n      title: '\u521b\u5efa\u65f6\u95f4',\n      dataIndex: 'createdAt',\n      width: 200,\n      valueType: 'dateTime',\n    },\n    {\n      title: '\u66f4\u65b0\u65f6\u95f4',\n      width: 120,\n      dataIndex: 'updatedAt',\n      valueType: 'date',\n    },\n    {\n      title: '\u64cd\u4f5c',\n      dataIndex: 'option',\n      width: 120,\n      valueType: 'option',\n      render: () => [\n        <a key=\"view\" target=\"_blank\" rel=\"noopener noreferrer\">\n          \u67e5\u770b\n        </a>,\n        <TableDropdown\n          key=\"other\" // eslint-disable-next-line no-alert\n          onSelect={key => window.alert(key)}\n          menus={[\n            {\n              key: 'copy',\n              name: '\u590d\u5236',\n            },\n            {\n              key: 'delete',\n              name: '\u5220\u9664',\n            },\n          ]}\n        />,\n      ],\n    },\n  ];\n  const { type, changeType, submit, reset } = search || {};\n\n  const simpleSearchForm = () => (\n    <Form className=\"wt-simple-search-form\" layout=\"inline\" form={form}>\n      <Form.Item name=\"search\">\n        <Input.Search\n          allowClear\n          placeholder=\"\u8bf7\u8f93\u5165\u59d3\u540d\u6216\u8005\u90ae\u7bb1\"\n          enterButton\n          suffix={\n            <Tooltip title=\"\u66f4\u591a\u641c\u7d22\u6761\u4ef6\">\n              <Button onClick={changeType} size=\"small\" type=\"link\" icon={<MoreOutlined />} />\n            </Tooltip>\n          }\n          onSearch={submit}\n        />\n      </Form.Item>\n    </Form>\n  );\n\n  const advanceSearchForm = () => (\n    <Form {...LAYOUT_FORM_TWO} form={form}>\n      <Row>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u59d3\u540d\" name=\"name\">\n            <Input autoComplete=\"off\" placeholder=\"\u59d3\u540d\" />\n          </Form.Item>\n        </Col>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u90ae\u7bb1\" name=\"title\">\n            <Input autoComplete=\"off\" placeholder=\"\u90ae\u7bb1\" />\n          </Form.Item>\n        </Col>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u63cf\u8ff0\" name=\"desc\">\n            <Input autoComplete=\"off\" placeholder=\"\u63cf\u8ff0\" />\n          </Form.Item>\n        </Col>\n        <Form.Item className=\"wt-advance-search-form-operator\">\n          <Space>\n            <Button type=\"primary\" onClick={submit}>\n              \u67e5\u8be2\n            </Button>\n            <Button onClick={reset}>\u91cd\u7f6e</Button>\n            <Button type=\"link\" onClick={changeType}>\n              \u6298\u53e0\n            </Button>\n          </Space>\n        </Form.Item>\n      </Row>\n    </Form>\n  );\n\n  return (\n    <PageContainer\n      title=\"\u663e\u793a\u63d0\u793a\u5757\"\n      extra={[\n        type === 'simple' ? simpleSearchForm() : undefined,\n        <Button key=\"1\">\u65b0\u589e</Button>,\n        <Button key=\"2\">\u5bfc\u51fa</Button>,\n      ]}\n    >\n      <ProTable\n        columns={columns}\n        rowKey=\"key\"\n        searchType={type}\n        renderSearch={advanceSearchForm}\n        tableAlertRender={() => <Alert message=\"\u81ea\u5b9a\u4e49\u663e\u793a\u5185\u5bb9\" type=\"info\" showIcon />}\n        {...tableProps}\n      />\n    </PageContainer>\n  );\n};\n",tsx:"import React from 'react';\nimport { Row, Col, Input, Button, Form, Space, Tooltip, Alert } from 'antd';\nimport { MoreOutlined } from '@ant-design/icons';\nimport { LAYOUT_FORM_TWO, LAYOUT_COL_SEARCH_SIX } from '@wetrial/core/es/constants';\nimport { ProTable } from '@wetrial/component';\nimport { ProColumns, TableDropdown } from '@wetrial/component/es/ProTable';\nimport { useFormTable, formatFormTableParams } from '@wetrial/hooks';\nimport { PageContainer } from '@ant-design/pro-layout';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  status: string;\n  updatedAt: number;\n  createdAt: number;\n  progress: number;\n  money: number;\n}\n\n// \u6a21\u62df\u6570\u636e\u8bf7\u6c42\nconst getList = async (data) => {\n  // eslint-disable-next-line no-console\n  console.log(data);\n  return new Promise((resolve) => {\n    const tableListDataSource: TableListItem[] = [];\n    for (let i = 0; i < 100; i += 1) {\n      tableListDataSource.push({\n        key: i,\n        name: `TradeCode ${i}`,\n        status: valueEnum[Math.floor(Math.random() * 10) % 4],\n        updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n        createdAt: Date.now() - Math.floor(Math.random() * 2000),\n        money: Math.floor(Math.random() * 2000) * i,\n        progress: Math.ceil(Math.random() * 100) + 1,\n      });\n    }\n    return resolve({\n      total: 100,\n      list: tableListDataSource,\n    });\n  });\n};\n\nexport default () => {\n  const [form] = Form.useForm();\n  const { tableProps, search, sorter } = useFormTable(\n    (paginatedParams, formData) => getList(formatFormTableParams(paginatedParams, formData)),\n    {\n      form,\n    },\n  );\n\n  const columns: ProColumns<TableListItem>[] = [\n    {\n      title: '\u5e8f\u53f7',\n      dataIndex: 'index',\n      valueType: 'indexBorder',\n      width: 70,\n    },\n    {\n      title: '\u6807\u9898',\n      dataIndex: 'name',\n      sorter: true,\n      sortOrder: sorter.field === 'name' && sorter.order,\n      render: (_) => <a>{_}</a>,\n    },\n    {\n      title: '\u72b6\u6001',\n      dataIndex: 'status',\n      width: 100,\n    },\n    {\n      title: '\u521b\u5efa\u65f6\u95f4',\n      dataIndex: 'createdAt',\n      width: 200,\n      valueType: 'dateTime',\n    },\n    {\n      title: '\u66f4\u65b0\u65f6\u95f4',\n      width: 120,\n      dataIndex: 'updatedAt',\n      valueType: 'date',\n    },\n    {\n      title: '\u64cd\u4f5c',\n      dataIndex: 'option',\n      width: 120,\n      valueType: 'option',\n      render: () => [\n        <a key=\"view\" target=\"_blank\" rel=\"noopener noreferrer\">\n          \u67e5\u770b\n        </a>,\n        <TableDropdown\n          key=\"other\"\n          // eslint-disable-next-line no-alert\n          onSelect={(key) => window.alert(key)}\n          menus={[\n            { key: 'copy', name: '\u590d\u5236' },\n            { key: 'delete', name: '\u5220\u9664' },\n          ]}\n        />,\n      ],\n    },\n  ];\n\n  const { type, changeType, submit, reset } = search || {};\n\n  const simpleSearchForm = () => (\n    <Form className=\"wt-simple-search-form\" layout=\"inline\" form={form}>\n      <Form.Item name=\"search\">\n        <Input.Search\n          allowClear\n          placeholder=\"\u8bf7\u8f93\u5165\u59d3\u540d\u6216\u8005\u90ae\u7bb1\"\n          enterButton\n          suffix={\n            <Tooltip title=\"\u66f4\u591a\u641c\u7d22\u6761\u4ef6\">\n              <Button onClick={changeType} size=\"small\" type=\"link\" icon={<MoreOutlined />} />\n            </Tooltip>\n          }\n          onSearch={submit}\n        />\n      </Form.Item>\n    </Form>\n  );\n\n  const advanceSearchForm = () => (\n    <Form {...LAYOUT_FORM_TWO} form={form}>\n      <Row>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u59d3\u540d\" name=\"name\">\n            <Input autoComplete=\"off\" placeholder=\"\u59d3\u540d\" />\n          </Form.Item>\n        </Col>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u90ae\u7bb1\" name=\"title\">\n            <Input autoComplete=\"off\" placeholder=\"\u90ae\u7bb1\" />\n          </Form.Item>\n        </Col>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u63cf\u8ff0\" name=\"desc\">\n            <Input autoComplete=\"off\" placeholder=\"\u63cf\u8ff0\" />\n          </Form.Item>\n        </Col>\n        <Form.Item className=\"wt-advance-search-form-operator\">\n          <Space>\n            <Button type=\"primary\" onClick={submit}>\n              \u67e5\u8be2\n            </Button>\n            <Button onClick={reset}>\u91cd\u7f6e</Button>\n            <Button type=\"link\" onClick={changeType}>\n              \u6298\u53e0\n            </Button>\n          </Space>\n        </Form.Item>\n      </Row>\n    </Form>\n  );\n\n  return (\n    <PageContainer\n      title=\"\u663e\u793a\u63d0\u793a\u5757\"\n      extra={[\n        type === 'simple' ? simpleSearchForm() : undefined,\n        <Button key=\"1\">\u65b0\u589e</Button>,\n        <Button key=\"2\">\u5bfc\u51fa</Button>,\n      ]}\n    >\n      <ProTable<TableListItem>\n        columns={columns}\n        rowKey=\"key\"\n        searchType={type}\n        renderSearch={advanceSearchForm}\n        tableAlertRender={() => {\n          return <Alert message=\"\u81ea\u5b9a\u4e49\u663e\u793a\u5185\u5bb9\" type=\"info\" showIcon />;\n        }}\n        {...tableProps}\n      />\n    </PageContainer>\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.3",css:"antd/dist/antd.css"},"@ant-design/icons":{version:"4.2.2"},"@ant-design/pro-layout":{version:"6.4.15"}},identifier:"docs-pro-table-1"},o.a.createElement(i,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h3",{id:"\u4f38\u7f29\u5217"},o.a.createElement(r["AnchorLink"],{to:"#\u4f38\u7f29\u5217","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"\u4f38\u7f29\u5217")),o.a.createElement(l["default"],{sources:{_:{jsx:"import React from 'react';\nimport { Row, Col, Input, Button, Form, Space, Tooltip } from 'antd';\nimport { MoreOutlined } from '@ant-design/icons';\nimport { ProTable } from '@wetrial/component';\nimport { LAYOUT_FORM_TWO, LAYOUT_COL_SEARCH_SIX } from '@wetrial/core/es/constants';\nimport { TableDropdown } from '@wetrial/component/es/ProTable';\nimport { useFormTable, formatFormTableParams } from '@wetrial/hooks';\nimport { PageContainer } from '@ant-design/pro-layout';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\n// \u6a21\u62df\u6570\u636e\u8bf7\u6c42\nconst getList = async data => {\n  // eslint-disable-next-line no-console\n  console.log(data);\n  return new Promise(resolve => {\n    const tableListDataSource = [];\n\n    for (let i = 0; i < 100; i += 1) {\n      tableListDataSource.push({\n        key: i,\n        name: `TradeCode ${i}`,\n        status: valueEnum[Math.floor(Math.random() * 10) % 4],\n        updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n        createdAt: Date.now() - Math.floor(Math.random() * 2000),\n        money: Math.floor(Math.random() * 2000) * i,\n        progress: Math.ceil(Math.random() * 100) + 1,\n      });\n    }\n\n    return resolve({\n      total: 100,\n      list: tableListDataSource,\n    });\n  });\n};\n\nexport default () => {\n  const [form] = Form.useForm();\n  const { tableProps, search, sorter } = useFormTable(\n    (paginatedParams, formData) => getList(formatFormTableParams(paginatedParams, formData)),\n    {\n      form,\n    },\n  );\n  const columns = [\n    {\n      title: '\u5e8f\u53f7',\n      dataIndex: 'index',\n      valueType: 'indexBorder',\n      width: 70,\n    },\n    {\n      title: '\u6807\u9898',\n      dataIndex: 'name',\n      sorter: true,\n      sortOrder: sorter.field === 'name' && sorter.order,\n      render: _ => <a>{_}</a>,\n    },\n    {\n      title: '\u72b6\u6001',\n      dataIndex: 'status',\n      width: 100,\n    },\n    {\n      title: '\u521b\u5efa\u65f6\u95f4',\n      dataIndex: 'createdAt',\n      width: 200,\n      valueType: 'dateTime',\n    },\n    {\n      title: '\u66f4\u65b0\u65f6\u95f4',\n      width: 120,\n      dataIndex: 'updatedAt',\n      valueType: 'date',\n    },\n    {\n      title: '\u64cd\u4f5c',\n      dataIndex: 'option',\n      width: 120,\n      valueType: 'option',\n      render: () => [\n        <a key=\"view\" target=\"_blank\" rel=\"noopener noreferrer\">\n          \u67e5\u770b\n        </a>,\n        <TableDropdown\n          key=\"other\" // eslint-disable-next-line no-alert\n          onSelect={key => window.alert(key)}\n          menus={[\n            {\n              key: 'copy',\n              name: '\u590d\u5236',\n            },\n            {\n              key: 'delete',\n              name: '\u5220\u9664',\n            },\n          ]}\n        />,\n      ],\n    },\n  ];\n  const { type, changeType, submit, reset } = search || {};\n\n  const simpleSearchForm = () => (\n    <Form className=\"wt-simple-search-form\" layout=\"inline\" form={form}>\n      <Form.Item name=\"search\">\n        <Input.Search\n          allowClear\n          placeholder=\"\u8bf7\u8f93\u5165\u59d3\u540d\u6216\u8005\u90ae\u7bb1\"\n          enterButton\n          suffix={\n            <Tooltip title=\"\u66f4\u591a\u641c\u7d22\u6761\u4ef6\">\n              <Button onClick={changeType} size=\"small\" type=\"link\" icon={<MoreOutlined />} />\n            </Tooltip>\n          }\n          onSearch={submit}\n        />\n      </Form.Item>\n    </Form>\n  );\n\n  const advanceSearchForm = () => (\n    <Form {...LAYOUT_FORM_TWO} form={form}>\n      <Row>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u59d3\u540d\" name=\"name\">\n            <Input autoComplete=\"off\" placeholder=\"\u59d3\u540d\" />\n          </Form.Item>\n        </Col>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u90ae\u7bb1\" name=\"title\">\n            <Input autoComplete=\"off\" placeholder=\"\u90ae\u7bb1\" />\n          </Form.Item>\n        </Col>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u63cf\u8ff0\" name=\"desc\">\n            <Input autoComplete=\"off\" placeholder=\"\u63cf\u8ff0\" />\n          </Form.Item>\n        </Col>\n        <Form.Item className=\"wt-advance-search-form-operator\">\n          <Space>\n            <Button type=\"primary\" onClick={submit}>\n              \u67e5\u8be2\n            </Button>\n            <Button onClick={reset}>\u91cd\u7f6e</Button>\n            <Button type=\"link\" onClick={changeType}>\n              \u6298\u53e0\n            </Button>\n          </Space>\n        </Form.Item>\n      </Row>\n    </Form>\n  );\n\n  return (\n    <PageContainer\n      title=\"\u4f38\u7f29\u5217\"\n      extra={[\n        type === 'simple' ? simpleSearchForm() : undefined,\n        <Button key=\"1\">\u65b0\u589e</Button>,\n        <Button key=\"2\">\u5bfc\u51fa</Button>,\n      ]}\n    >\n      <ProTable\n        resizeable\n        columns={columns}\n        rowKey=\"key\"\n        searchType={type}\n        renderSearch={advanceSearchForm}\n        {...tableProps}\n      />\n    </PageContainer>\n  );\n};\n",tsx:"import React from 'react';\nimport { Row, Col, Input, Button, Form, Space, Tooltip } from 'antd';\nimport { MoreOutlined } from '@ant-design/icons';\nimport { ProTable } from '@wetrial/component';\nimport { LAYOUT_FORM_TWO, LAYOUT_COL_SEARCH_SIX } from '@wetrial/core/es/constants';\nimport { ProColumns, TableDropdown } from '@wetrial/component/es/ProTable';\nimport { useFormTable, formatFormTableParams } from '@wetrial/hooks';\nimport { PageContainer } from '@ant-design/pro-layout';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  status: string;\n  updatedAt: number;\n  createdAt: number;\n  progress: number;\n  money: number;\n}\n\n// \u6a21\u62df\u6570\u636e\u8bf7\u6c42\nconst getList = async (data) => {\n  // eslint-disable-next-line no-console\n  console.log(data);\n  return new Promise((resolve) => {\n    const tableListDataSource: TableListItem[] = [];\n    for (let i = 0; i < 100; i += 1) {\n      tableListDataSource.push({\n        key: i,\n        name: `TradeCode ${i}`,\n        status: valueEnum[Math.floor(Math.random() * 10) % 4],\n        updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n        createdAt: Date.now() - Math.floor(Math.random() * 2000),\n        money: Math.floor(Math.random() * 2000) * i,\n        progress: Math.ceil(Math.random() * 100) + 1,\n      });\n    }\n    return resolve({\n      total: 100,\n      list: tableListDataSource,\n    });\n  });\n};\n\nexport default () => {\n  const [form] = Form.useForm();\n  const { tableProps, search, sorter } = useFormTable(\n    (paginatedParams, formData) => getList(formatFormTableParams(paginatedParams, formData)),\n    {\n      form,\n    },\n  );\n\n  const columns: ProColumns<TableListItem>[] = [\n    {\n      title: '\u5e8f\u53f7',\n      dataIndex: 'index',\n      valueType: 'indexBorder',\n      width: 70,\n    },\n    {\n      title: '\u6807\u9898',\n      dataIndex: 'name',\n      sorter: true,\n      sortOrder: sorter.field === 'name' && sorter.order,\n      render: (_) => <a>{_}</a>,\n    },\n    {\n      title: '\u72b6\u6001',\n      dataIndex: 'status',\n      width: 100,\n    },\n    {\n      title: '\u521b\u5efa\u65f6\u95f4',\n      dataIndex: 'createdAt',\n      width: 200,\n      valueType: 'dateTime',\n    },\n    {\n      title: '\u66f4\u65b0\u65f6\u95f4',\n      width: 120,\n      dataIndex: 'updatedAt',\n      valueType: 'date',\n    },\n    {\n      title: '\u64cd\u4f5c',\n      dataIndex: 'option',\n      width: 120,\n      valueType: 'option',\n      render: () => [\n        <a key=\"view\" target=\"_blank\" rel=\"noopener noreferrer\">\n          \u67e5\u770b\n        </a>,\n        <TableDropdown\n          key=\"other\"\n          // eslint-disable-next-line no-alert\n          onSelect={(key) => window.alert(key)}\n          menus={[\n            { key: 'copy', name: '\u590d\u5236' },\n            { key: 'delete', name: '\u5220\u9664' },\n          ]}\n        />,\n      ],\n    },\n  ];\n\n  const { type, changeType, submit, reset } = search || {};\n\n  const simpleSearchForm = () => (\n    <Form className=\"wt-simple-search-form\" layout=\"inline\" form={form}>\n      <Form.Item name=\"search\">\n        <Input.Search\n          allowClear\n          placeholder=\"\u8bf7\u8f93\u5165\u59d3\u540d\u6216\u8005\u90ae\u7bb1\"\n          enterButton\n          suffix={\n            <Tooltip title=\"\u66f4\u591a\u641c\u7d22\u6761\u4ef6\">\n              <Button onClick={changeType} size=\"small\" type=\"link\" icon={<MoreOutlined />} />\n            </Tooltip>\n          }\n          onSearch={submit}\n        />\n      </Form.Item>\n    </Form>\n  );\n\n  const advanceSearchForm = () => (\n    <Form {...LAYOUT_FORM_TWO} form={form}>\n      <Row>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u59d3\u540d\" name=\"name\">\n            <Input autoComplete=\"off\" placeholder=\"\u59d3\u540d\" />\n          </Form.Item>\n        </Col>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u90ae\u7bb1\" name=\"title\">\n            <Input autoComplete=\"off\" placeholder=\"\u90ae\u7bb1\" />\n          </Form.Item>\n        </Col>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u63cf\u8ff0\" name=\"desc\">\n            <Input autoComplete=\"off\" placeholder=\"\u63cf\u8ff0\" />\n          </Form.Item>\n        </Col>\n        <Form.Item className=\"wt-advance-search-form-operator\">\n          <Space>\n            <Button type=\"primary\" onClick={submit}>\n              \u67e5\u8be2\n            </Button>\n            <Button onClick={reset}>\u91cd\u7f6e</Button>\n            <Button type=\"link\" onClick={changeType}>\n              \u6298\u53e0\n            </Button>\n          </Space>\n        </Form.Item>\n      </Row>\n    </Form>\n  );\n\n  return (\n    <PageContainer\n      title=\"\u4f38\u7f29\u5217\"\n      extra={[\n        type === 'simple' ? simpleSearchForm() : undefined,\n        <Button key=\"1\">\u65b0\u589e</Button>,\n        <Button key=\"2\">\u5bfc\u51fa</Button>,\n      ]}\n    >\n      <ProTable<TableListItem>\n        resizeable\n        columns={columns}\n        rowKey=\"key\"\n        searchType={type}\n        renderSearch={advanceSearchForm}\n        {...tableProps}\n      />\n    </PageContainer>\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.3",css:"antd/dist/antd.css"},"@ant-design/icons":{version:"4.2.2"},"@ant-design/pro-layout":{version:"6.4.15"}},identifier:"docs-pro-table-2"},o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h3",{id:"\u6709\u8bb0\u5fc6\u529f\u80fd\u7684\u5217\u8868"},o.a.createElement(r["AnchorLink"],{to:"#\u6709\u8bb0\u5fc6\u529f\u80fd\u7684\u5217\u8868","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"\u6709\u8bb0\u5fc6\u529f\u80fd\u7684\u5217\u8868")),o.a.createElement(l["default"],{sources:{_:{jsx:"import React from 'react';\nimport { useLocation, Link } from 'umi';\nimport { Row, Col, Input, Button, Form, Space, Tooltip, Alert } from 'antd';\nimport { MoreOutlined } from '@ant-design/icons';\nimport { ProTable } from '@wetrial/component';\nimport { LAYOUT_FORM_TWO, LAYOUT_COL_SEARCH_SIX } from '@wetrial/core/es/constants';\nimport { TableDropdown } from '@wetrial/component/es/ProTable';\nimport { useFormTable, formatFormTableParams } from '@wetrial/hooks';\nimport { PageContainer } from '@ant-design/pro-layout';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\n// \u6a21\u62df\u6570\u636e\u8bf7\u6c42\nconst getList = async data => {\n  // eslint-disable-next-line no-console\n  console.log(data);\n  return new Promise(resolve => {\n    const tableListDataSource = [];\n\n    for (let i = 0; i < 100; i += 1) {\n      tableListDataSource.push({\n        key: i,\n        name: `TradeCode ${i}`,\n        status: valueEnum[Math.floor(Math.random() * 10) % 4],\n        updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n        createdAt: Date.now() - Math.floor(Math.random() * 2000),\n        money: Math.floor(Math.random() * 2000) * i,\n        progress: Math.ceil(Math.random() * 100) + 1,\n      });\n    }\n\n    return resolve({\n      total: 100,\n      list: tableListDataSource,\n    });\n  });\n};\n\nexport default () => {\n  const [form] = Form.useForm();\n  const { pathname } = useLocation();\n  const { tableProps, search, sorter } = useFormTable(\n    (paginatedParams, formData) => getList(formatFormTableParams(paginatedParams, formData)),\n    {\n      form,\n      cacheKey: pathname,\n    },\n  );\n  const columns = [\n    {\n      title: '\u5e8f\u53f7',\n      dataIndex: 'index',\n      valueType: 'indexBorder',\n      width: 70,\n    },\n    {\n      title: '\u6807\u9898',\n      dataIndex: 'name',\n      sorter: true,\n      sortOrder: sorter.field === 'name' && sorter.order,\n      render: _ => <a>{_}</a>,\n    },\n    {\n      title: '\u72b6\u6001',\n      dataIndex: 'status',\n      width: 100,\n    },\n    {\n      title: '\u521b\u5efa\u65f6\u95f4',\n      dataIndex: 'createdAt',\n      width: 200,\n      valueType: 'dateTime',\n    },\n    {\n      title: '\u66f4\u65b0\u65f6\u95f4',\n      width: 120,\n      dataIndex: 'updatedAt',\n      valueType: 'date',\n    },\n    {\n      title: '\u64cd\u4f5c',\n      dataIndex: 'option',\n      width: 120,\n      valueType: 'option',\n      render: () => [\n        <a key=\"view\" target=\"_blank\" rel=\"noopener noreferrer\">\n          \u67e5\u770b\n        </a>,\n        <TableDropdown\n          key=\"other\" // eslint-disable-next-line no-alert\n          onSelect={key => window.alert(key)}\n          menus={[\n            {\n              key: 'copy',\n              name: '\u590d\u5236',\n            },\n            {\n              key: 'delete',\n              name: '\u5220\u9664',\n            },\n          ]}\n        />,\n      ],\n    },\n  ];\n  const { type, changeType, submit, reset } = search || {};\n\n  const simpleSearchForm = () => (\n    <Form className=\"wt-simple-search-form\" layout=\"inline\" form={form}>\n      <Form.Item name=\"search\">\n        <Input.Search\n          allowClear\n          placeholder=\"\u8bf7\u8f93\u5165\u59d3\u540d\u6216\u8005\u90ae\u7bb1\"\n          enterButton\n          suffix={\n            <Tooltip title=\"\u66f4\u591a\u641c\u7d22\u6761\u4ef6\">\n              <Button onClick={changeType} size=\"small\" type=\"link\" icon={<MoreOutlined />} />\n            </Tooltip>\n          }\n          onSearch={submit}\n        />\n      </Form.Item>\n    </Form>\n  );\n\n  const advanceSearchForm = () => (\n    <Form {...LAYOUT_FORM_TWO} form={form}>\n      <Row>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u59d3\u540d\" name=\"name\">\n            <Input autoComplete=\"off\" placeholder=\"\u59d3\u540d\" />\n          </Form.Item>\n        </Col>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u90ae\u7bb1\" name=\"title\">\n            <Input autoComplete=\"off\" placeholder=\"\u90ae\u7bb1\" />\n          </Form.Item>\n        </Col>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u63cf\u8ff0\" name=\"desc\">\n            <Input autoComplete=\"off\" placeholder=\"\u63cf\u8ff0\" />\n          </Form.Item>\n        </Col>\n        <Form.Item className=\"wt-advance-search-form-operator\">\n          <Space>\n            <Button type=\"primary\" onClick={submit}>\n              \u67e5\u8be2\n            </Button>\n            <Button onClick={reset}>\u91cd\u7f6e</Button>\n            <Button type=\"link\" onClick={changeType}>\n              \u6298\u53e0\n            </Button>\n          </Space>\n        </Form.Item>\n      </Row>\n    </Form>\n  );\n\n  return (\n    <PageContainer\n      title=\"\u641c\u7d22\u3001\u5206\u9875\u540e\u5207\u6362\u9875\u9762\u518d\u5207\u6362\u56de\u6765\uff0c\u4f1a\u6062\u590d\u4e4b\u524d\u7684\u641c\u7d22\u72b6\u6001\"\n      extra={[\n        type === 'simple' ? simpleSearchForm() : undefined,\n        <Button key=\"1\">\u65b0\u589e</Button>,\n        <Button key=\"2\">\u5bfc\u51fa</Button>,\n        <Button type=\"link\" key=\"3\">\n          <Link to=\"/list/test/test\">\u8fdb\u5165\u8be6\u60c5</Link>\n        </Button>,\n      ]}\n    >\n      <ProTable\n        columns={columns}\n        rowKey=\"key\"\n        searchType={type}\n        renderSearch={advanceSearchForm}\n        tableAlertRender={() => (\n          <Alert message=\"\u70b9\u51fb`\u8fdb\u5165\u8be6\u60c5` \u518d\u901a\u8fc7 `\u8fd4\u56de\u5217\u8868\u9875` \u8fd4\u56de\" type=\"info\" showIcon />\n        )}\n        {...tableProps}\n      />\n    </PageContainer>\n  );\n};\n",tsx:"import React from 'react';\nimport { useLocation, Link } from 'umi';\nimport { Row, Col, Input, Button, Form, Space, Tooltip, Alert } from 'antd';\nimport { MoreOutlined } from '@ant-design/icons';\nimport { ProTable } from '@wetrial/component';\nimport { LAYOUT_FORM_TWO, LAYOUT_COL_SEARCH_SIX } from '@wetrial/core/es/constants';\nimport { ProColumns, TableDropdown } from '@wetrial/component/es/ProTable';\nimport { useFormTable, formatFormTableParams } from '@wetrial/hooks';\nimport { PageContainer } from '@ant-design/pro-layout';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  status: string;\n  updatedAt: number;\n  createdAt: number;\n  progress: number;\n  money: number;\n}\n\n// \u6a21\u62df\u6570\u636e\u8bf7\u6c42\nconst getList = async (data) => {\n  // eslint-disable-next-line no-console\n  console.log(data);\n  return new Promise((resolve) => {\n    const tableListDataSource: TableListItem[] = [];\n    for (let i = 0; i < 100; i += 1) {\n      tableListDataSource.push({\n        key: i,\n        name: `TradeCode ${i}`,\n        status: valueEnum[Math.floor(Math.random() * 10) % 4],\n        updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n        createdAt: Date.now() - Math.floor(Math.random() * 2000),\n        money: Math.floor(Math.random() * 2000) * i,\n        progress: Math.ceil(Math.random() * 100) + 1,\n      });\n    }\n    return resolve({\n      total: 100,\n      list: tableListDataSource,\n    });\n  });\n};\n\nexport default () => {\n  const [form] = Form.useForm();\n  const { pathname } = useLocation();\n  const { tableProps, search, sorter } = useFormTable(\n    (paginatedParams, formData) => getList(formatFormTableParams(paginatedParams, formData)),\n    {\n      form,\n      cacheKey: pathname,\n    },\n  );\n\n  const columns: ProColumns<TableListItem>[] = [\n    {\n      title: '\u5e8f\u53f7',\n      dataIndex: 'index',\n      valueType: 'indexBorder',\n      width: 70,\n    },\n    {\n      title: '\u6807\u9898',\n      dataIndex: 'name',\n      sorter: true,\n      sortOrder: sorter.field === 'name' && sorter.order,\n      render: (_) => <a>{_}</a>,\n    },\n    {\n      title: '\u72b6\u6001',\n      dataIndex: 'status',\n      width: 100,\n    },\n    {\n      title: '\u521b\u5efa\u65f6\u95f4',\n      dataIndex: 'createdAt',\n      width: 200,\n      valueType: 'dateTime',\n    },\n    {\n      title: '\u66f4\u65b0\u65f6\u95f4',\n      width: 120,\n      dataIndex: 'updatedAt',\n      valueType: 'date',\n    },\n    {\n      title: '\u64cd\u4f5c',\n      dataIndex: 'option',\n      width: 120,\n      valueType: 'option',\n      render: () => [\n        <a key=\"view\" target=\"_blank\" rel=\"noopener noreferrer\">\n          \u67e5\u770b\n        </a>,\n        <TableDropdown\n          key=\"other\"\n          // eslint-disable-next-line no-alert\n          onSelect={(key) => window.alert(key)}\n          menus={[\n            { key: 'copy', name: '\u590d\u5236' },\n            { key: 'delete', name: '\u5220\u9664' },\n          ]}\n        />,\n      ],\n    },\n  ];\n\n  const { type, changeType, submit, reset } = search || {};\n\n  const simpleSearchForm = () => (\n    <Form className=\"wt-simple-search-form\" layout=\"inline\" form={form}>\n      <Form.Item name=\"search\">\n        <Input.Search\n          allowClear\n          placeholder=\"\u8bf7\u8f93\u5165\u59d3\u540d\u6216\u8005\u90ae\u7bb1\"\n          enterButton\n          suffix={\n            <Tooltip title=\"\u66f4\u591a\u641c\u7d22\u6761\u4ef6\">\n              <Button onClick={changeType} size=\"small\" type=\"link\" icon={<MoreOutlined />} />\n            </Tooltip>\n          }\n          onSearch={submit}\n        />\n      </Form.Item>\n    </Form>\n  );\n\n  const advanceSearchForm = () => (\n    <Form {...LAYOUT_FORM_TWO} form={form}>\n      <Row>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u59d3\u540d\" name=\"name\">\n            <Input autoComplete=\"off\" placeholder=\"\u59d3\u540d\" />\n          </Form.Item>\n        </Col>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u90ae\u7bb1\" name=\"title\">\n            <Input autoComplete=\"off\" placeholder=\"\u90ae\u7bb1\" />\n          </Form.Item>\n        </Col>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u63cf\u8ff0\" name=\"desc\">\n            <Input autoComplete=\"off\" placeholder=\"\u63cf\u8ff0\" />\n          </Form.Item>\n        </Col>\n        <Form.Item className=\"wt-advance-search-form-operator\">\n          <Space>\n            <Button type=\"primary\" onClick={submit}>\n              \u67e5\u8be2\n            </Button>\n            <Button onClick={reset}>\u91cd\u7f6e</Button>\n            <Button type=\"link\" onClick={changeType}>\n              \u6298\u53e0\n            </Button>\n          </Space>\n        </Form.Item>\n      </Row>\n    </Form>\n  );\n\n  return (\n    <PageContainer\n      title=\"\u641c\u7d22\u3001\u5206\u9875\u540e\u5207\u6362\u9875\u9762\u518d\u5207\u6362\u56de\u6765\uff0c\u4f1a\u6062\u590d\u4e4b\u524d\u7684\u641c\u7d22\u72b6\u6001\"\n      extra={[\n        type === 'simple' ? simpleSearchForm() : undefined,\n        <Button key=\"1\">\u65b0\u589e</Button>,\n        <Button key=\"2\">\u5bfc\u51fa</Button>,\n        <Button type=\"link\" key=\"3\">\n          <Link to=\"/list/test/test\">\u8fdb\u5165\u8be6\u60c5</Link>\n        </Button>,\n      ]}\n    >\n      <ProTable<TableListItem>\n        columns={columns}\n        rowKey=\"key\"\n        searchType={type}\n        renderSearch={advanceSearchForm}\n        tableAlertRender={() => {\n          return <Alert message=\"\u70b9\u51fb`\u8fdb\u5165\u8be6\u60c5` \u518d\u901a\u8fc7 `\u8fd4\u56de\u5217\u8868\u9875` \u8fd4\u56de\" type=\"info\" showIcon />;\n        }}\n        {...tableProps}\n      />\n    </PageContainer>\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.3",css:"antd/dist/antd.css"},umi:{version:"3.2.19"},"@ant-design/icons":{version:"4.2.2"},"@ant-design/pro-layout":{version:"6.4.15"}},identifier:"docs-pro-table-3"},o.a.createElement(c,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h3",{id:"\u81ea\u5b9a\u4e49\u663e\u793a\u5217"},o.a.createElement(r["AnchorLink"],{to:"#\u81ea\u5b9a\u4e49\u663e\u793a\u5217","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"\u81ea\u5b9a\u4e49\u663e\u793a\u5217")),o.a.createElement(l["default"],{sources:{_:{jsx:"import React from 'react';\nimport { Row, Col, Input, Button, Form, Space, Tooltip } from 'antd';\nimport { MoreOutlined } from '@ant-design/icons';\nimport { LAYOUT_FORM_TWO, LAYOUT_COL_SEARCH_SIX } from '@wetrial/core/es/constants';\nimport { ProTable } from '@wetrial/component';\nimport { TableDropdown } from '@wetrial/component/es/ProTable';\nimport { useLocalStorageState } from 'ahooks';\nimport { useFormTable, formatFormTableParams } from '@wetrial/hooks';\nimport { PageContainer } from '@ant-design/pro-layout';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\n// \u6a21\u62df\u6570\u636e\u8bf7\u6c42\nconst getList = async data => {\n  // eslint-disable-next-line no-console\n  console.log(data);\n  return new Promise(resolve => {\n    const tableListDataSource = [];\n\n    for (let i = 0; i < 100; i++) {\n      tableListDataSource.push({\n        key: i,\n        name: `TradeCode ${i}`,\n        status: valueEnum[Math.floor(Math.random() * 10) % 4],\n        updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n        createdAt: Date.now() - Math.floor(Math.random() * 2000),\n        money: Math.floor(Math.random() * 2000) * i,\n        progress: Math.ceil(Math.random() * 100) + 1,\n      });\n    }\n\n    return resolve({\n      total: 100,\n      list: tableListDataSource,\n    });\n  });\n};\n\nexport default () => {\n  const [form] = Form.useForm();\n  const [columnStateMaps, setColumnStateMaps] = useLocalStorageState('wetrial-testxxx', {\n    name: {\n      show: false,\n    },\n  });\n  const { tableProps, search, sorter } = useFormTable(\n    (paginatedParams, formData) => getList(formatFormTableParams(paginatedParams, formData)),\n    {\n      form,\n    },\n  );\n  const columns = [\n    {\n      title: '\u5e8f\u53f7',\n      dataIndex: 'index',\n      valueType: 'indexBorder',\n      width: 70,\n    },\n    {\n      title: '\u6807\u9898',\n      dataIndex: 'name',\n      sorter: true,\n      sortOrder: sorter.field === 'name' && sorter.order,\n      render: _ => <a>{_}</a>,\n    },\n    {\n      title: '\u72b6\u6001',\n      dataIndex: 'status',\n      width: 100,\n    },\n    {\n      title: '\u521b\u5efa\u65f6\u95f4',\n      dataIndex: 'createdAt',\n      width: 200,\n      valueType: 'dateTime',\n    },\n    {\n      title: '\u66f4\u65b0\u65f6\u95f4',\n      width: 120,\n      dataIndex: 'updatedAt',\n      valueType: 'date',\n    },\n    {\n      title: '\u64cd\u4f5c',\n      dataIndex: 'option',\n      width: 120,\n      valueType: 'option',\n      render: () => [\n        <a key=\"view\" target=\"_blank\" rel=\"noopener noreferrer\">\n          \u67e5\u770b\n        </a>,\n        <TableDropdown\n          key=\"other\" // eslint-disable-next-line no-alert\n          onSelect={key => window.alert(key)}\n          menus={[\n            {\n              key: 'copy',\n              name: '\u590d\u5236',\n            },\n            {\n              key: 'delete',\n              name: '\u5220\u9664',\n            },\n          ]}\n        />,\n      ],\n    },\n  ];\n  const { type, changeType, submit, reset } = search || {};\n\n  const simpleSearchForm = () => (\n    <Form className=\"wt-simple-search-form\" layout=\"inline\" form={form}>\n      <Form.Item name=\"search\">\n        <Input.Search\n          allowClear\n          placeholder=\"\u8bf7\u8f93\u5165\u59d3\u540d\u6216\u8005\u90ae\u7bb1\"\n          enterButton\n          suffix={\n            <Tooltip title=\"\u66f4\u591a\u641c\u7d22\u6761\u4ef6\">\n              <Button onClick={changeType} size=\"small\" type=\"link\" icon={<MoreOutlined />} />\n            </Tooltip>\n          }\n          onSearch={submit}\n        />\n      </Form.Item>\n    </Form>\n  );\n\n  const advanceSearchForm = () => (\n    <Form {...LAYOUT_FORM_TWO} form={form}>\n      <Row>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u59d3\u540d\" name=\"name\">\n            <Input autoComplete=\"off\" placeholder=\"\u59d3\u540d\" />\n          </Form.Item>\n        </Col>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u90ae\u7bb1\" name=\"title\">\n            <Input autoComplete=\"off\" placeholder=\"\u90ae\u7bb1\" />\n          </Form.Item>\n        </Col>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u63cf\u8ff0\" name=\"desc\">\n            <Input autoComplete=\"off\" placeholder=\"\u63cf\u8ff0\" />\n          </Form.Item>\n        </Col>\n        <Form.Item className=\"wt-advance-search-form-operator\">\n          <Space>\n            <Button type=\"primary\" onClick={submit}>\n              \u67e5\u8be2\n            </Button>\n            <Button onClick={reset}>\u91cd\u7f6e</Button>\n            <Button type=\"link\" onClick={changeType}>\n              \u6298\u53e0\n            </Button>\n          </Space>\n        </Form.Item>\n      </Row>\n    </Form>\n  );\n\n  return (\n    <PageContainer\n      title=\"\u81ea\u5b9a\u4e49\u663e\u793a\u5217(\u8bbe\u7f6e\u663e\u793a\u7684\u5217\u540e\uff0c\u5237\u65b0\u770b\u770b\u6548\u679c)\"\n      extra={[type === 'simple' ? simpleSearchForm() : undefined, <Button key=\"1\">\u65b0\u589e</Button>]}\n    >\n      <ProTable\n        columns={columns}\n        columnsStateMap={columnStateMaps}\n        onColumnsStateChange={setColumnStateMaps}\n        rowKey=\"key\"\n        searchType={type}\n        renderSearch={advanceSearchForm}\n        {...tableProps}\n      />\n    </PageContainer>\n  );\n};\n",tsx:"import React from 'react';\nimport { Row, Col, Input, Button, Form, Space, Tooltip } from 'antd';\nimport { MoreOutlined } from '@ant-design/icons';\nimport { LAYOUT_FORM_TWO, LAYOUT_COL_SEARCH_SIX } from '@wetrial/core/es/constants';\nimport { ProTable } from '@wetrial/component';\nimport { ProColumns, TableDropdown } from '@wetrial/component/es/ProTable';\nimport { ColumnsState } from '@wetrial/component/es/Table';\nimport { useLocalStorageState } from 'ahooks';\nimport { useFormTable, formatFormTableParams } from '@wetrial/hooks';\nimport { PageContainer } from '@ant-design/pro-layout';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  status: string;\n  updatedAt: number;\n  createdAt: number;\n  progress: number;\n  money: number;\n}\n\n// \u6a21\u62df\u6570\u636e\u8bf7\u6c42\nconst getList = async (data) => {\n  // eslint-disable-next-line no-console\n  console.log(data);\n  return new Promise((resolve) => {\n    const tableListDataSource: TableListItem[] = [];\n    for (let i = 0; i < 100; i++) {\n      tableListDataSource.push({\n        key: i,\n        name: `TradeCode ${i}`,\n        status: valueEnum[Math.floor(Math.random() * 10) % 4],\n        updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n        createdAt: Date.now() - Math.floor(Math.random() * 2000),\n        money: Math.floor(Math.random() * 2000) * i,\n        progress: Math.ceil(Math.random() * 100) + 1,\n      });\n    }\n    return resolve({\n      total: 100,\n      list: tableListDataSource,\n    });\n  });\n};\n\nexport default () => {\n  const [form] = Form.useForm();\n\n  const [columnStateMaps, setColumnStateMaps] = useLocalStorageState<{\n    [key: string]: ColumnsState;\n  }>('wetrial-testxxx', { name: { show: false } });\n\n  const { tableProps, search, sorter } = useFormTable(\n    (paginatedParams, formData) => getList(formatFormTableParams(paginatedParams, formData)),\n    {\n      form,\n    },\n  );\n\n  const columns: ProColumns<TableListItem>[] = [\n    {\n      title: '\u5e8f\u53f7',\n      dataIndex: 'index',\n      valueType: 'indexBorder',\n      width: 70,\n    },\n    {\n      title: '\u6807\u9898',\n      dataIndex: 'name',\n      sorter: true,\n      sortOrder: sorter.field === 'name' && sorter.order,\n      render: (_) => <a>{_}</a>,\n    },\n    {\n      title: '\u72b6\u6001',\n      dataIndex: 'status',\n      width: 100,\n    },\n    {\n      title: '\u521b\u5efa\u65f6\u95f4',\n      dataIndex: 'createdAt',\n      width: 200,\n      valueType: 'dateTime',\n    },\n    {\n      title: '\u66f4\u65b0\u65f6\u95f4',\n      width: 120,\n      dataIndex: 'updatedAt',\n      valueType: 'date',\n    },\n    {\n      title: '\u64cd\u4f5c',\n      dataIndex: 'option',\n      width: 120,\n      valueType: 'option',\n      render: () => [\n        <a key=\"view\" target=\"_blank\" rel=\"noopener noreferrer\">\n          \u67e5\u770b\n        </a>,\n        <TableDropdown\n          key=\"other\"\n          // eslint-disable-next-line no-alert\n          onSelect={(key) => window.alert(key)}\n          menus={[\n            { key: 'copy', name: '\u590d\u5236' },\n            { key: 'delete', name: '\u5220\u9664' },\n          ]}\n        />,\n      ],\n    },\n  ];\n\n  const { type, changeType, submit, reset } = search || {};\n\n  const simpleSearchForm = () => (\n    <Form className=\"wt-simple-search-form\" layout=\"inline\" form={form}>\n      <Form.Item name=\"search\">\n        <Input.Search\n          allowClear\n          placeholder=\"\u8bf7\u8f93\u5165\u59d3\u540d\u6216\u8005\u90ae\u7bb1\"\n          enterButton\n          suffix={\n            <Tooltip title=\"\u66f4\u591a\u641c\u7d22\u6761\u4ef6\">\n              <Button onClick={changeType} size=\"small\" type=\"link\" icon={<MoreOutlined />} />\n            </Tooltip>\n          }\n          onSearch={submit}\n        />\n      </Form.Item>\n    </Form>\n  );\n\n  const advanceSearchForm = () => (\n    <Form {...LAYOUT_FORM_TWO} form={form}>\n      <Row>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u59d3\u540d\" name=\"name\">\n            <Input autoComplete=\"off\" placeholder=\"\u59d3\u540d\" />\n          </Form.Item>\n        </Col>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u90ae\u7bb1\" name=\"title\">\n            <Input autoComplete=\"off\" placeholder=\"\u90ae\u7bb1\" />\n          </Form.Item>\n        </Col>\n        <Col {...LAYOUT_COL_SEARCH_SIX}>\n          <Form.Item label=\"\u63cf\u8ff0\" name=\"desc\">\n            <Input autoComplete=\"off\" placeholder=\"\u63cf\u8ff0\" />\n          </Form.Item>\n        </Col>\n        <Form.Item className=\"wt-advance-search-form-operator\">\n          <Space>\n            <Button type=\"primary\" onClick={submit}>\n              \u67e5\u8be2\n            </Button>\n            <Button onClick={reset}>\u91cd\u7f6e</Button>\n            <Button type=\"link\" onClick={changeType}>\n              \u6298\u53e0\n            </Button>\n          </Space>\n        </Form.Item>\n      </Row>\n    </Form>\n  );\n\n  return (\n    <PageContainer\n      title=\"\u81ea\u5b9a\u4e49\u663e\u793a\u5217(\u8bbe\u7f6e\u663e\u793a\u7684\u5217\u540e\uff0c\u5237\u65b0\u770b\u770b\u6548\u679c)\"\n      extra={[type === 'simple' ? simpleSearchForm() : undefined, <Button key=\"1\">\u65b0\u589e</Button>]}\n    >\n      <ProTable<TableListItem>\n        columns={columns}\n        columnsStateMap={columnStateMaps}\n        onColumnsStateChange={setColumnStateMaps}\n        rowKey=\"key\"\n        searchType={type}\n        renderSearch={advanceSearchForm}\n        {...tableProps}\n      />\n    </PageContainer>\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.3",css:"antd/dist/antd.css"},"@ant-design/icons":{version:"4.2.2"},ahooks:{version:"2.5.0"},"@ant-design/pro-layout":{version:"6.4.15"}},identifier:"docs-pro-table-4"},o.a.createElement(d,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement(r["AnchorLink"],{to:"#api","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"API"),o.a.createElement("h3",{id:"table"},o.a.createElement(r["AnchorLink"],{to:"#table","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"Table"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u53c2\u6570"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"resizeable"),o.a.createElement("td",null,"\u662f\u5426\u5141\u8bb8\u81ea\u5b9a\u4e49\u5217\u5bbd"),o.a.createElement("td",null,o.a.createElement("code",null,"boolean")),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"containerClassName"),o.a.createElement("td",null,"\u8bbe\u7f6e\u5bb9\u5668\u5143\u7d20\u7684 class"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"containerStyle"),o.a.createElement("td",null,"\u8bbe\u7f6e\u5bb9\u5668\u5143\u7d20\u7684 style"),o.a.createElement("td",null,"CSSProperties"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"options"),o.a.createElement("td",null,"table \u7684\u5de5\u5177\u680f\uff0c\u8bbe\u7f6e\u4e3a false \u53ef\u4ee5\u5173\u95ed\u5b83"),o.a.createElement("td",null,"{"," density: true, fullScreen:true, setting: true","}"),o.a.createElement("td",null)),o.a.createElement("tr",null,o.a.createElement("td",null,"onSizeChange"),o.a.createElement("td",null,"table \u5c3a\u5bf8\u53d1\u751f\u6539\u53d8"),o.a.createElement("td",null,"function(size: 'default' |'middle' |'small' |undefined) => void"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"columnsStateMap"),o.a.createElement("td",null,"columns \u7684\u72b6\u6001\u679a\u4e3e"),o.a.createElement("td",null,"{","[key: string]: ","{",' show:boolean, fixed: "right"|"left"',"}"," ","}"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onColumnsStateChange"),o.a.createElement("td",null,"columns \u72b6\u6001\u53d1\u751f\u6539\u53d8"),o.a.createElement("td",null,"function(props: ","{","[key: string]: ","{",' show:boolean, fixed: "right"|"left"',"}"," ","}",") => void"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,o.a.createElement(r["Link"],{to:"https://ant.design/components/table-cn/#API"},"\u66f4\u591a\u5c5e\u6027 ")),o.a.createElement("td",null),o.a.createElement("td",null),o.a.createElement("td",null)))),o.a.createElement("h3",{id:"columns"},o.a.createElement(r["AnchorLink"],{to:"#columns","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"Columns"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u53c2\u6570"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"valueType"),o.a.createElement("td",null,"\u503c\u7684\u7c7b\u578b,\u76f8\u5f53\u4e8e\u7b80\u5316\u7248\u7684 render"),o.a.createElement("td",null,o.a.createElement("code",null,"'money'\u3001'option'\u3001'date'\u3001'dateRange'\u3001'dateTime'\u3001'dateTimeRange'\u3001'time'\u3001'index'\u3001'indexBorder'\u3001'progress'\u3001'digit'")),o.a.createElement("td",null,"'text'")),o.a.createElement("tr",null,o.a.createElement("td",null,o.a.createElement(r["Link"],{to:"https://ant.design/components/table-cn/#Column"},"\u66f4\u591a \u5c5e\u6027 ")),o.a.createElement("td",null),o.a.createElement("td",null),o.a.createElement("td",null)))),o.a.createElement("h4",{id:"valuetype"},o.a.createElement(r["AnchorLink"],{to:"#valuetype","aria-hidden":"true"},o.a.createElement("span",{className:["icon","icon-link"]})),"valueType"),o.a.createElement("p",null,"\u73b0\u5728\u652f\u6301\u7684\u503c\u5982\u4e0b"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u63cf\u8ff0"),o.a.createElement("th",null,"\u793a\u4f8b"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"money"),o.a.createElement("td",null,"\u8f6c\u5316\u503c\u4e3a\u91d1\u989d"),o.a.createElement("td",null,"\xa510,000.26")),o.a.createElement("tr",null,o.a.createElement("td",null,"date"),o.a.createElement("td",null,"\u65e5\u671f"),o.a.createElement("td",null,"2019-11-16")),o.a.createElement("tr",null,o.a.createElement("td",null,"dateRange"),o.a.createElement("td",null,"\u65e5\u671f\u533a\u95f4"),o.a.createElement("td",null,"2019-11-16 2019-11-18")),o.a.createElement("tr",null,o.a.createElement("td",null,"dateTime"),o.a.createElement("td",null,"\u65e5\u671f\u548c\u65f6\u95f4"),o.a.createElement("td",null,"2019-11-16 12:50:00")),o.a.createElement("tr",null,o.a.createElement("td",null,"dateTimeRange"),o.a.createElement("td",null,"\u65e5\u671f\u548c\u65f6\u95f4\u533a\u95f4"),o.a.createElement("td",null,"2019-11-16 12:50:00 2019-11-18 12:50:00")),o.a.createElement("tr",null,o.a.createElement("td",null,"time"),o.a.createElement("td",null,"\u65f6\u95f4"),o.a.createElement("td",null,"12:50:00")),o.a.createElement("tr",null,o.a.createElement("td",null,"option"),o.a.createElement("td",null,"\u64cd\u4f5c\u9879\uff0c\u4f1a\u81ea\u52a8\u589e\u52a0 marginRight\uff0c\u53ea\u652f\u6301\u4e00\u4e2a\u6570\u7ec4,\u8868\u5355\u4e2d\u4f1a\u81ea\u52a8\u5ffd\u7565"),o.a.createElement("td",null,o.a.createElement("code",null,"[<a>\u64cd\u4f5ca</a>,<a>\u64cd\u4f5cb</a>]"))),o.a.createElement("tr",null,o.a.createElement("td",null,"index"),o.a.createElement("td",null,"\u5e8f\u53f7\u5217"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"indexBorder"),o.a.createElement("td",null,"\u5e26 border \u7684\u5e8f\u53f7\u5217"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"progress"),o.a.createElement("td",null,"\u8fdb\u5ea6\u6761"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"digit"),o.a.createElement("td",null,"\u5355\u7eaf\u7684\u6570\u5b57"),o.a.createElement("td",null,"-")))))))}}}]);